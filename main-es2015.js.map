{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/SelectivePreloadStrategy.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/interceptors/authentication-interceptor.ts","./src/app/interceptors/index.ts","./src/app/main-nav/main-nav.component.ts","./src/app/main-nav/main-nav.component.html","./src/app/material/material.module.ts","./src/app/page-not-found/page-not-found.component.ts","./src/app/page-not-found/page-not-found.component.html","./src/app/story/StoryResolver.ts","./src/app/story/add-story/add-story.component.ts","./src/app/story/add-story/add-story.component.html","./src/app/story/chapter.model.ts","./src/app/story/chapter/chapter.component.ts","./src/app/story/chapter/chapter.component.html","./src/app/story/favorite-story-list/favorite-story-list.component.ts","./src/app/story/favorite-story-list/favorite-story-list.component.html","./src/app/story/my-story-list/my-story-list.component.ts","./src/app/story/my-story-list/my-story-list.component.html","./src/app/story/story-data.service.ts","./src/app/story/story-detail/story-detail.component.ts","./src/app/story/story-detail/story-detail.component.html","./src/app/story/story-filter.pipe.ts","./src/app/story/story-list/story-list.component.ts","./src/app/story/story-list/story-list.component.html","./src/app/story/story.model.ts","./src/app/story/story.module.ts","./src/app/story/story/story.component.ts","./src/app/story/story/story.component.html","./src/app/user/auth.guard.ts","./src/app/user/authentication.service.ts","./src/app/user/login/login.component.ts","./src/app/user/login/login.component.html","./src/app/user/regels/regels.component.ts","./src/app/user/regels/regels.component.html","./src/app/user/register/register.component.ts","./src/app/user/register/register.component.html","./src/app/user/user.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\r\nimport { PreloadingStrategy, Route } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class SelectivePreloadStrategy implements PreloadingStrategy {\r\n  preload(route: Route, load: Function): Observable<any> {\r\n    if (route.data && route.data.preload) {\r\n      console.log('preload ' + route.path);\r\n      return load();\r\n    }\r\n    return of(null);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { AuthGuard } from './user/auth.guard';\nimport { SelectivePreloadStrategy } from './SelectivePreloadStrategy';\nimport { LoginComponent } from './user/login/login.component';\nimport { RegisterComponent } from './user/register/register.component';\nimport { StoryListComponent } from './story/story-list/story-list.component';\nimport { AddStoryComponent } from './story/add-story/add-story.component';\nimport { MyStoryListComponent } from './story/my-story-list/my-story-list.component';\nimport { StoryDetailComponent } from './story/story-detail/story-detail.component';\nimport { StoryResolver } from './story/StoryResolver';\nimport { FavoriteStoryListComponent } from './story/favorite-story-list/favorite-story-list.component';\n\n\nconst appRoutes: Routes = [\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent },\n  { path: 'story/list', component: StoryListComponent },\n  { path: 'story/myList', component: MyStoryListComponent, canActivate: [AuthGuard] },\n  { path: 'story/favoriteList', component: FavoriteStoryListComponent, canActivate: [AuthGuard] },\n  { path: 'story/add', component: AddStoryComponent, canActivate: [AuthGuard] },\n  {\n    path: 'story/:id', \n    component: StoryDetailComponent, \n    resolve: { story: StoryResolver }\n  },\n  { path: '', redirectTo: 'story/list', pathMatch: 'full' },\n  { path: '**', component: PageNotFoundComponent },\n];\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    RouterModule.forRoot(appRoutes, {\n      preloadingStrategy: SelectivePreloadStrategy,\n    }),\n  ],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'coWrite';\n}\n","<app-main-nav>\n  <router-outlet></router-outlet>\n</app-main-nav>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { StoryModule } from './story/story.module';\nimport { MaterialModule } from './material/material.module';\nimport { AppRoutingModule } from './app-routing.module';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { MainNavComponent } from './main-nav/main-nav.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { UserModule } from './user/user.module';\nimport { httpInterceptorProviders } from './interceptors';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PageNotFoundComponent,\n    MainNavComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    StoryModule,\n    AppRoutingModule,\n    MaterialModule,\n    HttpClientModule,\n    UserModule,\n    AppRoutingModule,\n  ],\n  providers: [httpInterceptorProviders],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {\r\n    HttpInterceptor,\r\n    HttpRequest,\r\n    HttpHandler,\r\n    HttpEvent,\r\n  } from '@angular/common/http';\r\n  import { Injectable } from '@angular/core';\r\n  import { AuthenticationService } from '../user/authentication.service';\r\n  import { Observable } from 'rxjs';\r\n  \r\n  @Injectable()\r\n  export class AuthenticationInterceptor implements HttpInterceptor {\r\n    constructor(private authService: AuthenticationService) {}\r\n  \r\n    intercept(\r\n      req: HttpRequest<any>,\r\n      next: HttpHandler\r\n    ): Observable<HttpEvent<any>> {\r\n      if (this.authService.token.length) {\r\n        const clonedRequest = req.clone({\r\n          headers: req.headers.set(\r\n            'Authorization',\r\n            `Bearer ${this.authService.token}`\r\n          ),\r\n        });\r\n        return next.handle(clonedRequest);\r\n      }\r\n      return next.handle(req);\r\n    }\r\n  }\r\n  ","import { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { AuthenticationInterceptor } from './authentication-interceptor';\r\n\r\nexport const httpInterceptorProviders = [\r\n  {\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: AuthenticationInterceptor,\r\n    multi: true\r\n  }\r\n];\r\n","import { Component } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { AuthenticationService } from '../user/authentication.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-main-nav',\n  templateUrl: './main-nav.component.html',\n  styleUrls: ['./main-nav.component.css'],\n})\nexport class MainNavComponent {\n  loggedInUser$ = this._authenticationService.user$;\n\n  isHandset$: Observable<boolean> = this.breakpointObserver\n    .observe(Breakpoints.Handset)\n    .pipe(\n      map((result) => result.matches),\n      shareReplay()\n    );\n\n  constructor(\n    private breakpointObserver: BreakpointObserver,\n    private _authenticationService: AuthenticationService,\n    private _router: Router\n  ) {}\n\n  logout() {\n    this._authenticationService.logout();\n  }\n  login() {\n    console.log('login');\n    this._router.navigate(['/login']);\n  }\n}\n","<mat-sidenav-container class=\"sidenav-container\">\n  <mat-sidenav-content>\n    <mat-toolbar color=\"primary\">\n      <img src=\"../../assets/coWriteLogo.png\"  width=\"150\" height=\"80\" alt=\"logo\">\n      <ul>\n        <li>\n          <a data-cy=\"stories\" mat-list-item [routerLink]=\"['story/list']\">Stories</a>\n        </li>\n        <li>\n          <a data-cy=\"myStories\" mat-list-item [routerLink]=\"['story/myList']\">My stories</a>\n        </li>\n        <li>\n          <a data-cy=\"favStories\" mat-list-item [routerLink]=\"['story/favoriteList']\">Favorite stories</a>\n        </li>\n        <li>\n          <a data-cy=\"addStory\" mat-list-item [routerLink]=\"['story/add']\">\n            <mat-icon [inline]=\"true\">add_circle_outline</mat-icon> New story</a>\n        </li>\n      </ul>\n      <div fxFlex fxLayout fxLayoutAlign=\"end\" fxHide.xs>\n        <span *ngIf=\"loggedInUser$ | async as user; else loginTemplate\">\n          <mat-icon [inline]=\"true\">account_circle</mat-icon> {{ user }}\n          <button data-cy=\"logout\" (click)=\"logout()\" mat-flat-button>\n            logout\n          </button>\n        </span>\n        <ng-template #loginTemplate>\n          <span>\n            <button (click)=\"login()\" mat-flat-button>\n              login\n            </button>\n          </span>\n        </ng-template>\n      </div>\n    </mat-toolbar>\n    <ng-content></ng-content>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatListModule } from '@angular/material/list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatOptionModule } from '@angular/material/core';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { LayoutModule } from '@angular/cdk/layout';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    FlexLayoutModule,\n    MatListModule,\n    MatCardModule,\n    MatIconModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatProgressSpinnerModule,\n    MatOptionModule,\n    MatSelectModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    LayoutModule\n  ],\n  exports: [\n    FlexLayoutModule,\n    MatListModule,\n    MatCardModule,\n    MatIconModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatProgressSpinnerModule,\n    MatOptionModule,\n    MatSelectModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    LayoutModule\n  ]\n})\nexport class MaterialModule {}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-error data-cy=\"appError\">\n    404: page not found\n</mat-error>\n    \n","import {\r\n    Resolve,\r\n    RouterStateSnapshot,\r\n    ActivatedRouteSnapshot\r\n  } from '@angular/router';\r\n  import { Story } from './story.model';\r\n  import { Injectable } from '@angular/core';\r\n  import { StoryDataService } from './story-data.service';\r\n  import { Observable } from 'rxjs';\r\n  \r\n  @Injectable({\r\n    providedIn: 'root'\r\n  })\r\n  export class StoryResolver implements Resolve<Story> {\r\n    constructor(private storyService: StoryDataService) {}\r\n\r\n    resolve(\r\n      route: ActivatedRouteSnapshot,\r\n      state: RouterStateSnapshot\r\n    ): Observable<Story> {\r\n      return this.storyService.getStory$(route.params['id']);\r\n    }\r\n  }\r\n  ","import { StoryDataService } from './../story-data.service';\nimport { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport {\n  FormGroup,\n  FormControl,\n  Validators,\n  FormBuilder,\n  FormArray,\n  ReactiveFormsModule\n} from '@angular/forms';\nimport { debounceTime, distinctUntilChanged, catchError } from 'rxjs/operators';\nimport { EMPTY } from 'rxjs';\nimport { Story } from '../story.model';\nimport { Chapter } from '../chapter.model';\n\n@Component({\n  selector: 'app-add-story',\n  templateUrl: './add-story.component.html',\n  styleUrls: ['./add-story.component.css'],\n})\nexport class AddStoryComponent implements OnInit {\n  public story: FormGroup;\n  public errorMessage: string = '';\n  public confirmationMessage: string = '';\n\n  constructor(\n    private fb: FormBuilder,\n    private _storyDataService: StoryDataService\n  ) {}\n\n  ngOnInit() {\n    this.story = this.fb.group({\n      storyName: ['', [Validators.required, Validators.minLength(2)]],\n      chapterName: [''],\n      inhoud: ['']\n    });\n  }\n\n  onSubmit() {\n    this._storyDataService\n      .addNewStory(new Story(this.story.value.storyName, 1, \"\", new Date(), new Array(new Chapter(this.story.value.chapterName, 1, new Date(), this.story.value.inhoud, \"\"))))\n      .pipe(\n        catchError((err) => {\n          this.errorMessage = err;\n          return EMPTY;\n        })\n      )\n      .subscribe((rec: Story) => {\n        this.confirmationMessage = `a story for ${rec.name} was successfully added`;\n      });\n\n    this.story = this.fb.group({\n      storyName: ['', [Validators.required, Validators.minLength(2)]],\n      chapterName: [''],\n      inhoud: ['']\n    });\n  }\n\n  getErrorMessage(errors: any): string {\n    if (!errors) {\n      return null;\n    }\n    if (errors.required) {\n      return 'is required';\n    } else if (errors.minlength) {\n      return `needs at least ${errors.minlength.requiredLength} characters (got ${errors.minlength.actualLength})`;\n    } else if (errors.amountNoName) {\n      return `if amount is set you must set a name`;\n    }\n  }\n}\n","<mat-card>\n  <mat-card-content>\n    <form [formGroup]=\"story\" (ngSubmit)=\"onSubmit()\">\n      <mat-form-field>\n            <input\n              matInput\n              type=\"text\"\n              aria-label=\"storyName\"\n              placeholder=\"Name of story\"\n              formControlName=\"storyName\"\n            />\n            <mat-error\n            *ngIf=\"story.get('storyName')['errors'] && story.get('storyName').touched\"\n          >\n            {{ getErrorMessage(story.get('storyName')['errors']) }}\n          </mat-error>\n      </mat-form-field>\n\n          <mat-form-field>\n                <input\n                  matInput\n                  type=\"text\"\n                  aria-label=\"chapterName\"\n                  placeholder=\"Name of first chapter\"\n                  formControlName=\"chapterName\"\n                />\n          </mat-form-field>\n          <mat-form-field>\n                <textarea\n                  matInput\n                  type=\"text\"\n                  aria-label=\"inhoud\"\n                  placeholder=\"Text\"\n                  formControlName=\"inhoud\"\n                  rows=\"20\"\n                ></textarea>\n          </mat-form-field>\n      <button data-cy=\"create\" mat-raised-button type=\"submit\" [disabled]='!story.valid'>\n        Create story\n      </button>\n    </form>\n  </mat-card-content>\n</mat-card>\n<mat-card class=\"error\" *ngIf=\"errorMessage\" data-cy=\"appError\">\n  got an error while adding the story: {{ errorMessage }}\n</mat-card>\n<mat-card\n  class=\"confirmation\"\n  *ngIf=\"confirmationMessage\"\n  data-cy=\"appConfirmation\">\n  {{ confirmationMessage }}\n</mat-card>\n","export interface ChapterJson {\r\n    name: string;\r\n    number: number;\r\n    dateAdded: Date;\r\n    text: string;\r\n    author: string;\r\n  }\r\n\r\nexport interface ChapterCreateJson {\r\n  chapterName: string;\r\n  text: string;\r\n}\r\n\r\n\r\n  export class Chapter {\r\n    constructor(\r\n      private _name: string,\r\n      private _number = 1,\r\n      private _dateAdded = new Date(),\r\n      private _text: string,\r\n      private _author: string\r\n    ) {}\r\n  \r\n    static fromJSON(json: ChapterJson): Chapter {\r\n      const ing = new Chapter(\r\n        json.name, \r\n        json.number, \r\n        new Date(json.dateAdded), \r\n        json.text, \r\n        json.author);\r\n      return ing;\r\n    }\r\n\r\n    static fromJSONCreate(json: ChapterCreateJson): Chapter {\r\n      const ing = new Chapter(\r\n        json.chapterName,\r\n        1,\r\n        new Date(),\r\n        json.text,\r\n        \"\");\r\n      return ing;\r\n    }\r\n  \r\n    toJSON(): ChapterJson {\r\n      return { name: this.name, \r\n              number: this._number, \r\n              dateAdded: this._dateAdded, \r\n              text: this._text, author: \r\n              this._author };\r\n    }\r\n  \r\n    get name() {\r\n      return this._name;\r\n    }\r\n    get number() {\r\n        return this._number;\r\n    }\r\n\r\n    get dateAdded() {\r\n        return this._dateAdded\r\n    } \r\n    \r\n    get text() {\r\n        return this._text;\r\n    }\r\n\r\n    get author() {\r\n        return this._author;\r\n    }\r\n  }\r\n  ","import { Component, OnInit, Input } from '@angular/core';\nimport { Chapter } from '../chapter.model';\n\n@Component({\n  selector: 'app-chapter',\n  templateUrl: './chapter.component.html',\n  styleUrls: ['./chapter.component.css']\n})\nexport class ChapterComponent implements OnInit {\n  @Input() chapter: Chapter;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-card>\r\n    <mat-card-header>\r\n      <mat-card-title\r\n        >{{ chapter.number }}: {{ chapter.name }}\r\n      </mat-card-title>\r\n      <mat-card-subtitle>\r\n          written by {{chapter.author}}\r\n      </mat-card-subtitle> \r\n    </mat-card-header>\r\n    <mat-card-content>\r\n        {{ chapter.text }}\r\n    </mat-card-content>\r\n    <mat-card-footer>\r\n        added on {{ chapter.dateAdded | date:'dd-MM-yyyy' }}\r\n    </mat-card-footer> \r\n</mat-card>\r\n  ","import { Component, OnInit } from '@angular/core';\nimport { Story } from '../story.model';\nimport { StoryDataService } from '../story-data.service';\nimport { Subject, Observable, of, EMPTY, merge } from 'rxjs';\nimport {\n  distinctUntilChanged,\n  debounceTime,\n  map,\n  filter,\n  catchError,\n  scan,\n} from 'rxjs/operators';\nimport { AuthenticationService } from 'src/app/user/authentication.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-favorite-story-list',\n  templateUrl: './favorite-story-list.component.html',\n  styleUrls: ['./favorite-story-list.component.css'],\n})\n\nexport class FavoriteStoryListComponent implements OnInit {\n  public filterStoryName: string;\n  public filterStory$ = new Subject<string>();\n  private _fetchStories$: Observable<Story[]>;\n\n  public errorMessage: string = '';\n\n  constructor(private route: ActivatedRoute, private _storyDataService: StoryDataService) {\n    this.filterStory$\n      .pipe(\n        distinctUntilChanged(),\n        debounceTime(400),\n        map((val) => val.toLowerCase())\n      )\n      .subscribe((val) => (this.filterStoryName = val));\n  }\n\n  ngOnInit(): void {\n    this._fetchStories$ = this._storyDataService.favoriteStories$.pipe(\n      catchError((err) => {\n        this.errorMessage = err;\n        return EMPTY;\n      })\n    );\n  }\n\n  applyFilter(filter: string) {\n    this.filterStoryName = filter;\n  }\n\n  get stories$(): Observable<Story[]> {\n    return this._fetchStories$;\n  }\n}\n","<div fxLayout=\"column\" fxLayoutGap=\"2%\">\n  <mat-card>\n    <mat-form-field>\n      <input\n        matInput\n        (keyup)=\"filterStory$.next($event.target.value)\"\n        placeholder=\"filter\"\n        type=\"text\"\n        data-cy=\"filterInput\"\n      />\n    </mat-form-field>\n  </mat-card>\n  <mat-card class=\"error\" *ngIf=\"errorMessage\" data-cy=\"appError\">\n    got an error while loading the story list: {{ errorMessage }}\n  </mat-card>\n  <div *ngIf=\"stories$ | async as stories; else loadingOrError\">\n    <div\n      fxLayout=\"row wrap\"\n      fxLayout.xs=\"column\"\n      fxLayoutGap=\"0.5%\"\n      fxLayoutAlign=\"start\"\n    >\n      <div\n        class=\"story\"\n        *ngFor=\"let story of stories | storyFilter: filterStoryName\"\n        fxFlex=\"0 0 calc(25%-0.5%)\"\n        fxFlex.xs=\"100%\"\n      >\n        <app-story [story]=\"story\"></app-story>\n      </div>\n    </div>\n  </div>\n\n  <ng-template #loadingOrError>\n    <span *ngIf=\"errorMessage; else loading\"></span>\n    <ng-template #loading>\n      <mat-spinner></mat-spinner>\n    </ng-template>\n  </ng-template>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Story } from '../story.model';\nimport { StoryDataService } from '../story-data.service';\nimport { Subject, Observable, of, EMPTY, merge } from 'rxjs';\nimport {\n  distinctUntilChanged,\n  debounceTime,\n  map,\n  filter,\n  catchError,\n  scan,\n} from 'rxjs/operators';\nimport { AuthenticationService } from 'src/app/user/authentication.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-my-story-list',\n  templateUrl: './my-story-list.component.html',\n  styleUrls: ['./my-story-list.component.css'],\n})\n\nexport class MyStoryListComponent implements OnInit {\n  public filterStoryName: string;\n  public filterStory$ = new Subject<string>();\n  private _fetchStories$: Observable<Story[]>;\n\n  public errorMessage: string = '';\n\n  constructor(private route: ActivatedRoute, private _storyDataService: StoryDataService) {\n    this.filterStory$\n      .pipe(\n        distinctUntilChanged(),\n        debounceTime(400),\n        map((val) => val.toLowerCase())\n      )\n      .subscribe((val) => (this.filterStoryName = val));\n  }\n\n  ngOnInit(): void {\n    this._fetchStories$ = this._storyDataService.myStories$.pipe(\n      catchError((err) => {\n        this.errorMessage = err;\n        return EMPTY;\n      })\n    );\n  }\n\n  applyFilter(filter: string) {\n    this.filterStoryName = filter;\n  }\n\n  get stories$(): Observable<Story[]> {\n    return this._fetchStories$;\n  }\n\n  deleteStory(story: Story) {\n    if (confirm(\"Are you sure you want to delete \" + story.name)) {\n      this._storyDataService.deleteStory(story);\n      this._fetchStories$ = this._storyDataService.myStories$.pipe(\n        catchError((err) => {\n          this.errorMessage = err;\n          return EMPTY;\n        })\n      );\n    }\n  }\n}\n","<div fxLayout=\"column\" fxLayoutGap=\"2%\">\n  <mat-card>\n    <mat-form-field>\n      <input\n        matInput\n        (keyup)=\"filterStory$.next($event.target.value)\"\n        placeholder=\"filter\"\n        type=\"text\"\n        data-cy=\"filterInput\"\n      />\n    </mat-form-field>\n  </mat-card>\n  <mat-card class=\"error\" *ngIf=\"errorMessage\" data-cy=\"appError\">\n    got an error while loading the story list: {{ errorMessage }}\n  </mat-card>\n  <div *ngIf=\"stories$ | async as stories; else loadingOrError\">\n    <div\n      fxLayout=\"row wrap\"\n      fxLayout.xs=\"column\"\n      fxLayoutGap=\"0.5%\"\n      fxLayoutAlign=\"start\"\n    >\n      <div\n        class=\"story\"\n        *ngFor=\"let story of stories | storyFilter: filterStoryName\"\n        fxFlex=\"0 0 calc(25%-0.5%)\"\n        fxFlex.xs=\"100%\"\n      >\n        <app-story [story]=\"story\"></app-story>\n        <button mat-button (click)=\"deleteStory(story)\">\n          <mat-icon>delete_forever</mat-icon>\n        </button>\n      </div>\n    </div>\n  </div>\n\n  <ng-template #loadingOrError>\n    <span *ngIf=\"errorMessage; else loading\"></span>\n    <ng-template #loading>\n      <mat-spinner></mat-spinner>\n    </ng-template>\n  </ng-template>\n</div>\n","import { Injectable, OnInit } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { map, catchError, tap, shareReplay, switchMap } from 'rxjs/operators';\nimport { Story } from './story.model';\nimport { Observable, throwError, BehaviorSubject, of } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { Chapter } from './chapter.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class StoryDataService {\n  private _stories$ = new BehaviorSubject<Story[]>([]);\n  private _stories: Story[];\n  private _chapters: Chapter[];\n  allChapters$: any;\n\n  constructor(private http: HttpClient) {\n    this.stories$\n      .pipe(\n        catchError((err) => {\n          // temporary fix, while we use the behaviorsubject as a cache stream\n          this._stories$.error(err);\n          return throwError(err);\n        })\n      )\n      .subscribe((stories: Story[]) => {\n        this._stories = stories;\n        this._stories$.next(this._stories);\n      });\n  }\n\n  get allStories$(): Observable<Story[]> {\n    return this._stories$;\n  }\n\n  get myStories$(): Observable<Story[]> {\n    return this.http.get(`${environment.apiUrl}/stories/MyStories`).pipe(\n      tap(console.log),\n      shareReplay(1),\n      catchError(this.handleError),\n      map((list: any[]): Story[] => list.map(Story.fromJSON))\n    );\n  }\n\n  get favoriteStories$(): Observable<Story[]> {\n    return this.http.get(`${environment.apiUrl}/author/favoriteStories`).pipe(\n      tap(console.log),\n      shareReplay(1),\n      catchError(this.handleError),\n      map((list: any[]): Story[] => list.map(Story.fromJSON))\n    );\n  }\n\n  get stories$(): Observable<Story[]> {\n    return this.http.get(`${environment.apiUrl}/stories/`).pipe(\n      tap(console.log),\n      shareReplay(1),\n      catchError(this.handleError),\n      map((list: any[]): Story[] => list.map(Story.fromJSON))\n    );\n  }\n\n  getStory$(id: number): Observable<Story> {\n    return this.http\n      .get(`${environment.apiUrl}/stories/${id}`)\n      .pipe(catchError(this.handleError), map(Story.fromJSON)); // returns just one recipe, as json\n  }\n\n  getChapters$(id: number): Observable<Chapter[]> {\n    return this.http\n      .get(`${environment.apiUrl}/stories/chapters/${id}`)\n      .pipe(tap(console.log),\n            shareReplay(1),\n            catchError(this.handleError), \n            map((list: any[]): Chapter[] => list.map(Chapter.fromJSON)))\n  }\n\n  isFavorited$(id: number): Observable<boolean> {\n    return this.http\n      .get(`${environment.apiUrl}/author/isFavorited/${id}`)\n      .pipe(tap(console.log),\n            shareReplay(1),\n            catchError(this.handleError))\n  }\n\n  favorite(story: Story) {\n    return this.http\n      .post(`${environment.apiUrl}/author/`, story.toJSON())\n      .pipe(tap(console.log), catchError(this.handleError), map(Story.fromJSON));\n  }\n\n  addNewStory(story: Story) {\n    return this.http\n      .post(`${environment.apiUrl}/stories/`, story.toJSON())\n      .pipe(catchError(this.handleError), map(Story.fromJSON))\n      .pipe(\n        // temporary fix, while we use the behaviorsubject as a cache stream\n        catchError((err) => {\n          this._stories$.error(err);\n          return throwError(err);\n        }),\n        tap((rec: Story) => {\n          this._stories = [...this._stories, rec];\n          this._stories$.next(this._stories);\n        })\n      );\n  }\n\n  updateStory(story: Story) {\n    return this.http\n      .put(`${environment.apiUrl}/stories/${story.id}`, story.toJSON())\n      .pipe(tap(console.log), catchError(this.handleError))\n      .subscribe(() => {\n        this._stories = this._stories.filter((rec) => rec.id != story.id);\n        this._stories$.next(this._stories);\n      });\n  }\n\n  deleteStory(story: Story) {\n    return this.http\n      .delete(`${environment.apiUrl}/stories/${story.id}`)\n      .pipe(tap(console.log), catchError(this.handleError))\n      .subscribe(() => {\n        this._stories = this._stories.filter((rec) => rec.id != story.id);\n        this._stories$.next(this._stories);\n      });\n  }\n\n  handleError(err: any): Observable<never> {\n    let errorMessage: string;\n    if (err.error instanceof ErrorEvent) {\n      errorMessage = `An error occurred: ${err.error.message}`;\n    } else if (err instanceof HttpErrorResponse) {\n      console.log(err);\n      errorMessage = `'${err.status} ${err.statusText}' when accessing '${err.url}'`;\n    } else {\n      errorMessage = err;\n    }\n    return throwError(errorMessage);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { StoryDataService } from '../story-data.service';\nimport { Story } from '../story.model';\nimport { FormBuilder, FormGroup, Validators, FormArray } from '@angular/forms';\nimport { Chapter } from '../chapter.model';\nimport { catchError, debounceTime, distinctUntilChanged, delay } from 'rxjs/operators';\nimport { EMPTY, Observable } from 'rxjs';\n\n\n@Component({\n  selector: 'app-story-detail',\n  templateUrl: './story-detail.component.html',\n  styleUrls: ['./story-detail.component.css']\n})\nexport class StoryDetailComponent implements OnInit {\n  public story: Story;\n  public chapterfg: FormGroup;\n  public errorMessage: string = '';\n  public confirmationMessage: string = '';\n  private _fetchChapters$: Observable<Chapter[]>;\n  private favorited$: Observable<boolean>;\n  private _isLoading: boolean;\n\n  constructor(\n    private route: ActivatedRoute,\n    private fb: FormBuilder,\n    private _storyDataService: StoryDataService\n  ) {\n    this._isLoading = true;\n  }\n\n  ngOnInit() {\n    this.route.data.subscribe(item => (this.story = item['story']));\n\n    this._fetchChapters$ = this._storyDataService.getChapters$(this.story.id).pipe(\n      catchError((err) => {\n        this.errorMessage = err;\n        return EMPTY;\n      })\n    );\n\n    this.favorited$ = this._storyDataService.isFavorited$(this.story.id).pipe(\n      catchError((err) => {\n        this.errorMessage = err;\n        return EMPTY;\n      })\n    );\n\n    this.chapterfg = this.fb.group({\n      chaptersforms: this.fb.array([ this.createChapters() ])\n    });\n\n    this.chaptersforms.valueChanges\n      .pipe(debounceTime(400), distinctUntilChanged())\n      .subscribe(ingList => {\n        const lastElement = ingList[ingList.length - 1];\n        if ( lastElement.chapterName && lastElement.text.length > 2 ) { \n          this.chaptersforms.push(this.createChapters()); \n         }else if (ingList.length >= 2) {\n          const secondToLast = ingList[ingList.length - 2];\n          if (\n            !lastElement.chapterName &&\n            !lastElement.text &&\n            (!secondToLast.chapterName || secondToLast.text.length < 2)\n          ) {\n            this.chaptersforms.removeAt(this.chaptersforms.length - 1);\n          }\n        }\n      });\n  }\n\n  createChapters(): FormGroup {\n    return this.fb.group({\n      chapterName: ['', [Validators.minLength(3)]],\n      text: ['']\n    });\n  }\n\n  get chaptersforms(): FormArray {\n    return <FormArray>this.chapterfg.get('chaptersforms');\n  }\n\n  get allChapters$(): Observable<Chapter[]> {\n    return this._fetchChapters$;\n  }\n\n  onSubmit() {\n    let chapters = this.chapterfg.value.chaptersforms.map(Chapter.fromJSONCreate);\n    chapters = chapters.filter((ing) => ing.name != \"\");\n    this.story.addChapters(chapters);\n\n    this._storyDataService\n      .updateStory(this.story)\n\n    this.chapterfg = this.fb.group({\n      chaptersforms: this.fb.array([ this.createChapters() ])\n    });\n  }\n\n  getErrorMessage(errors: any): string {\n    if (!errors) {\n      return null;\n    }\n    if (errors.required) {\n      return 'is required';\n    } else if (errors.minlength) {\n      return `needs at least ${errors.minlength.requiredLength} characters (got ${errors.minlength.actualLength})`;\n    } else if (errors.amountNoName) {\n      return `if amount is set you must set a name`;\n    }\n  }\n\n  ngAfterViewInit() { \n    this._isLoading = false; \n  }\n\n  get isLoading() {\n    return this._isLoading;\n  }\n\n  get isFavorited$() {\n    return this.favorited$;\n  }\n\n  async favoriteStory() {\n    this._storyDataService.favorite(this.story).pipe(\n      catchError((err) => {\n        this.errorMessage = err;\n        return EMPTY;\n      }) \n    ).subscribe(\n      story => this.favorited$ = this._storyDataService.isFavorited$(this.story.id).pipe(\n      catchError((err) => {\n        this.errorMessage = err;\n        return EMPTY;\n      })\n    ));\n  }\n}\n","<div class=\"container\">\n  <mat-card>\n  <mat-card-header>\n    <mat-card-title\n      ><mat-icon>menu_book</mat-icon> {{ story.name }} created by {{ story.author }}\n    </mat-card-title>\n    <mat-card-subtitle>\n      added on {{ story.dateAdded | date:'dd-MM-yyyy' }}</mat-card-subtitle>\n  </mat-card-header>\n  <mat-card-content>\n    <div *ngIf=\"isFavorited$ | async; else favorite\">\n      <button mat-button (click)=\"favoriteStory()\">\n        <mat-icon>favorite</mat-icon>\n        Favorited\n      </button>\n    </div>\n    <ng-template #favorite>\n      <button mat-button (click)=\"favoriteStory()\">\n        <mat-icon>favorite_border</mat-icon>\n        Favorite\n      </button>\n    </ng-template>\n    <h3 mat-subheader>Chapters</h3>\n    <div *ngIf=\"allChapters$ | async as chapters; else loadingOrError\">\n      <div\n        fxLayout=\"column\"\n        fxLayoutGap=”32px”\n        fxLayoutAlign=\"start start\"\n      >\n        <div\n          class=\"chapter\"\n          *ngFor=\"let chapter of chapters\"\n          fxFlex=\"0 0 calc(25%-0.5%)\"\n          fxFlex.xs=\"100%\"\n        >\n      <app-chapter [chapter]=\"chapter\"></app-chapter>\n        </div>\n      </div>\n    </div>\n    <ng-template #loadingOrError>\n      <span *ngIf=\"errorMessage; else loading\"></span>\n      <ng-template #loading>\n        <mat-spinner ></mat-spinner>\n      </ng-template>\n    </ng-template>\n  </mat-card-content>\n  </mat-card>\n  <mat-card>\n  <h3 mat-subheader>Add a chapter</h3>\n  <mat-card-content>\n    <form [formGroup]=\"chapterfg\" (ngSubmit)=\"onSubmit()\">\n      <div formArrayName=\"chaptersforms\" *ngFor=\"let item of chapterfg.get('chaptersforms')['controls']; let i = index\">\n        <div [formGroupName]=\"i\">\n          <mat-form-field>\n                <input\n                  matInput\n                  type=\"text\"\n                  aria-label=\"chapterName\"\n                  placeholder=\"Name of chapter\"\n                  formControlName=\"chapterName\"\n                />\n          </mat-form-field>\n          <mat-form-field>\n                <textarea\n                  matInput\n                  type=\"text\"\n                  aria-label=\"text\"\n                  placeholder=\"Chapter\"\n                  formControlName=\"text\"\n                  rows=\"10\"\n                ></textarea>\n          </mat-form-field>\n        </div>\n      </div>\n      <button mat-raised-button type=\"submit\">\n        Add chapter\n      </button>\n    </form>\n  </mat-card-content>\n  </mat-card>\n  <mat-card class=\"error\" *ngIf=\"errorMessage\" data-cy=\"appError\">\n  got an error while adding the story: {{ errorMessage }}\n  </mat-card>\n  <mat-card\n  class=\"confirmation\"\n  *ngIf=\"confirmationMessage\"\n  data-cy=\"appConfirmation\"\n  >\n  {{ confirmationMessage }}\n<div>\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Story } from './story.model';\n\n@Pipe({\n  name: 'storyFilter'\n})\nexport class StoryFilterPipe implements PipeTransform {\n  transform(stories: Story[], name: string): Story[] {\n    if (!name || name.length === 0) {\n      return stories;\n    }\n    return stories.filter(rec =>\n      rec.name.toLowerCase().startsWith(name.toLowerCase())\n    );\n  }\n}","import { Component, OnInit } from '@angular/core';\nimport { Story } from '../story.model';\nimport { StoryDataService } from '../story-data.service';\nimport { Subject, Observable, of, EMPTY, merge } from 'rxjs';\nimport {\n  distinctUntilChanged,\n  debounceTime,\n  map,\n  filter,\n  catchError,\n  scan,\n} from 'rxjs/operators';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-story-list',\n  templateUrl: './story-list.component.html',\n  styleUrls: ['./story-list.component.css'],\n})\n\nexport class StoryListComponent implements OnInit {\n  public filterStoryName: string;\n  public filterStory$ = new Subject<string>();\n  private _fetchStories$: Observable<Story[]>;\n\n  public errorMessage: string = '';\n\n  constructor(private _storyDataService: StoryDataService, private _router: Router) {\n    this.filterStory$\n      .pipe(\n        distinctUntilChanged(),\n        debounceTime(400),\n        map((val) => val.toLowerCase())\n      )\n      .subscribe((val) => (this.filterStoryName = val));\n  }\n\n  ngOnInit(): void {\n    this._fetchStories$ = this._storyDataService.allStories$.pipe(\n      catchError((err) => {\n        this.errorMessage = err;\n        return EMPTY;\n      })\n    );\n  }\n\n  applyFilter(filter: string) {\n    this.filterStoryName = filter;\n  }\n\n  get stories$(): Observable<Story[]> {\n    return this._fetchStories$;\n  }\n  \n  showStory(story: Story) {\n    this._router.navigateByUrl['/story/' + story.id];\n  }\n}\n","<div fxLayout=\"column\" fxLayoutGap=\"2%\">\n    <mat-card>\n      <mat-form-field>\n        <input\n          matInput\n          (keyup)=\"filterStory$.next($event.target.value)\"\n          placeholder=\"filter\"\n          type=\"text\"\n          data-cy=\"filterInput\"\n        />\n      </mat-form-field>\n    </mat-card>\n    <mat-card class=\"error\" *ngIf=\"errorMessage\" data-cy=\"appError\">\n      got an error while loading the story list: {{ errorMessage }}\n    </mat-card>\n    <div *ngIf=\"stories$ | async as stories; else loadingOrError\">\n      <div\n        fxLayout=\"row wrap\"\n        fxLayout.xs=\"column\"\n        fxLayoutGap=\"0.5%\"\n        fxLayoutAlign=\"start start\"\n      >\n        <div\n          class=\"story\"\n          *ngFor=\"let story of stories | storyFilter: filterStoryName\"\n          fxFlex=\"0 0 calc(25%-0.5%)\"\n          fxFlex.xs=\"100%\"\n        >\n          <app-story (click)=\"showStory(story)\" [story]=\"story\"></app-story> \n        </div>\n      </div>\n    </div>\n  \n    <ng-template #loadingOrError>\n      <span *ngIf=\"errorMessage; else loading\"></span>\n      <ng-template #loading>\n        <mat-spinner></mat-spinner>\n      </ng-template>\n    </ng-template>\n  </div>\n  ","import { Chapter, ChapterJson } from './chapter.model';\r\nimport { NumberValueAccessor } from '@angular/forms';\r\n\r\ninterface StoryJson {\r\n    id: number,\r\n    name: string,\r\n    favorites: number,\r\n    author: string,\r\n    dateAdded: Date,\r\n    chapters: ChapterJson[],\r\n}\r\n\r\nexport class Story {\r\n    private _id;\r\n\r\n    constructor(\r\n        private _name: string,\r\n        private _favorites = 1,\r\n        private _author = '',\r\n        private _dateAdded = new Date(),\r\n        private _chapters = new Array<Chapter>(),\r\n    ) {}\r\n\r\n    static fromJSON(json: StoryJson): Story {\r\n        const rec = new Story(\r\n            json.name, \r\n            json.favorites,\r\n            json.author,\r\n            new Date(json.dateAdded),\r\n            json.chapters.map(Chapter.fromJSON), \r\n        );\r\n        rec._id = json.id;\r\n        return rec;\r\n    }\r\n\r\n    toJSON(): StoryJson {\r\n        return <StoryJson> {\r\n            id: this.id,\r\n            name: this.name,\r\n            chapters: this.chapters.map(ing => ing.toJSON()),\r\n            favorites: this.favorites,\r\n            dateAdded: this.dateAdded,\r\n            author: this.author\r\n        };\r\n    }\r\n\r\n    get name(): string {\r\n        return this._name;\r\n    }\r\n\r\n    get chapters() : Chapter[] {\r\n        return this._chapters;\r\n    }\r\n\r\n    get dateAdded() {\r\n        return this._dateAdded;\r\n    }\r\n\r\n    get favorites() {\r\n        return this._favorites;\r\n    }\r\n\r\n    get author() {\r\n        return this._author;\r\n    }\r\n\r\n    get id() {\r\n        return this._id;\r\n    }\r\n\r\n    addChapters(chapterlist: Chapter[]) {\r\n        chapterlist.forEach(chapter => {\r\n            this._chapters.push(chapter);\r\n        });\r\n    }\r\n\r\n    addChapter(name: string, text: string, author?: string, number?: number) {\r\n        const currentDate = new Date();\r\n        this._chapters.push(new Chapter(name, number, currentDate, text, author));\r\n    }\r\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { StoryComponent } from './story/story.component';\nimport { ChapterComponent } from './chapter/chapter.component';\nimport { MaterialModule } from '../material/material.module';\nimport { StoryListComponent } from './story-list/story-list.component';\nimport { AddStoryComponent } from './add-story/add-story.component';\nimport { StoryFilterPipe } from './story-filter.pipe';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule, Routes } from '@angular/router';\nimport { MyStoryListComponent } from './my-story-list/my-story-list.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { StoryDetailComponent } from './story-detail/story-detail.component';\nimport { FavoriteStoryListComponent } from './favorite-story-list/favorite-story-list.component';\n\n\nconst routes: Routes = [\n  { path: 'list', component: StoryListComponent },\n  { path: 'add', component: AddStoryComponent }\n];\n@NgModule({\n  declarations: [\n    StoryComponent,\n    ChapterComponent,\n    StoryListComponent,\n    StoryFilterPipe,\n    AddStoryComponent,\n    MyStoryListComponent,\n    FavoriteStoryListComponent,\n    StoryDetailComponent\n    ],\n  imports: [\n    CommonModule, \n    MaterialModule, \n    ReactiveFormsModule,\n    RouterModule.forChild(routes),\n  ],\n  exports: [\n    StoryListComponent, \n    AddStoryComponent]\n})\nexport class StoryModule { }\n","import { Component, OnInit, Input } from '@angular/core';\nimport { ChapterComponent } from '../chapter/chapter.component';\nimport { Story } from '../story.model';\nimport { StoryDataService } from '../story-data.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-story',\n  templateUrl: './story.component.html',\n  styleUrls: ['./story.component.css']\n})\nexport class StoryComponent implements OnInit {\n  @Input() public story : Story;\n\n  constructor(private _storyDataService: StoryDataService, private _router: Router) {}\n\n  ngOnInit(): void {\n  }\n\n  showStory() {\n    this._router.navigate(['/story/' + this.story.id]);\n  }\n}\n","<mat-card data-cy=\"storyCard\" (click)=\"showStory()\">\n    <mat-card-header>\n      <mat-card-title\n        >{{ story.name }}\n      </mat-card-title>\n      <mat-card-title>\n        <mat-icon>favorite</mat-icon> {{ story.favorites }}\n      </mat-card-title>\n      <mat-card-subtitle\n        >added on {{ story.dateAdded | date:'dd-MM-yyyy' }}</mat-card-subtitle\n      >\n    </mat-card-header>\n    <mat-card-content>\n      <h3 mat-subheader>{{ story.chapters.length }} chapter(s)</h3>\n      <!---\n      <mat-list>\n        <mat-list-item *ngFor=\"let chapter of story.chapters\">\n          <app-chapter [chapter]=\"chapter\"></app-chapter>\n        </mat-list-item>\n      </mat-list>\n      -->\n    </mat-card-content>\n  </mat-card>\n  ","import { AuthenticationService } from './authentication.service';\nimport { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  Router,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private authService: AuthenticationService,\n    private router: Router\n  ) {}\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): boolean {\n    if (this.authService.user$.getValue()) {\n      return true;\n    }\n    this.authService.redirectUrl = state.url;\n    this.router.navigate(['/login']);\n    return false;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { map } from 'rxjs/operators';\n\nfunction parseJwt(token) {\n  if (!token) {\n    return null;\n  }\n  const base64Token = token.split('.')[1];\n  const base64 = base64Token.replace(/-/g, '+').replace(/_/g, '/');\n  return JSON.parse(window.atob(base64));\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthenticationService {\n  private readonly _tokenKey = 'currentUser';\n  private _user$: BehaviorSubject<string>;\n  public redirectUrl: string = null;\n\n  constructor(private http: HttpClient) {\n    let parsedToken = parseJwt(localStorage.getItem(this._tokenKey));\n    if (parsedToken) {\n      const expires =\n        new Date(parseInt(parsedToken.exp, 10) * 1000) < new Date();\n      if (expires) {\n        localStorage.removeItem(this._tokenKey);\n        parsedToken = null;\n      }\n    }\n    this._user$ = new BehaviorSubject<string>(\n      parsedToken && parsedToken.unique_name\n    );\n  }\n\n  get user$(): BehaviorSubject<string> {\n    return this._user$;\n  }\n\n  get token(): string {\n    const localToken = localStorage.getItem(this._tokenKey);\n    return !!localToken ? localToken : '';\n  }\n\n  login(email: string, password: string): Observable<boolean> {\n    return this.http\n      .post(\n        `${environment.apiUrl}/account`,\n        { email, password },\n        { responseType: 'text' }\n      )\n      .pipe(\n        map((token: any) => {\n          if (token) {\n            localStorage.setItem(this._tokenKey, token);\n            this._user$.next(email);\n            return true;\n          } else {\n            return false;\n          }\n        })\n      );\n  }\n\n  register(\n    nickname: string,\n    email: string,\n    password: string\n  ): Observable<boolean> {\n    return this.http\n      .post(\n        `${environment.apiUrl}/account/register`,\n        {\n          nickname,\n          email,\n          password,\n          passwordConfirmation: password,\n        },\n        { responseType: 'text' }\n      )\n      .pipe(\n        map((token: any) => {\n          if (token) {\n            localStorage.setItem(this._tokenKey, token);\n            this._user$.next(email);\n            return true;\n          } else {\n            return false;\n          }\n        })\n      );\n  }\n\n  logout() {\n    if (this.user$.getValue()) {\n      localStorage.removeItem('currentUser');\n      this._user$.next(null);\n    }\n  }\n\n  checkUserNameAvailability = (email: string): Observable<boolean> => {\n    return this.http.get<boolean>(\n      `${environment.apiUrl}/account/checkusername`,\n      {\n        params: { email },\n      }\n    );\n  };\n\n  checkNicknameAvailability = (nickname: string): Observable<boolean> => {\n    return this.http.get<boolean>(\n      `${environment.apiUrl}/account/checknickname`,\n      {\n        params: { nickname },\n      }\n    );\n  }\n}\n","import { AuthenticationService } from '../authentication.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {\n  AbstractControl,\n  FormBuilder,\n  FormGroup,\n  ValidatorFn,\n  Validators,\n} from '@angular/forms';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nfunction comparePasswords(control: AbstractControl): { [key: string]: any } {\n  const password = control.get('password');\n  const confirmPassword = control.get('confirmPassword');\n  return password.value === confirmPassword.value\n    ? null\n    : { passwordsDiffer: true };\n}\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent implements OnInit {\n  public user: FormGroup;\n  public errorMessage: string = '';\n\n  constructor(\n    private authService: AuthenticationService,\n    private router: Router,\n    private fb: FormBuilder\n  ) {}\n\n  ngOnInit() {\n    this.user = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required],\n    });\n  }\n\n  onSubmit() {\n    this.authService\n      .login(this.user.value.email, this.user.value.password)\n      .subscribe(\n        (val) => {\n          if (val) {\n            if (this.authService.redirectUrl) {\n              this.router.navigateByUrl(this.authService.redirectUrl);\n              this.authService.redirectUrl = undefined;\n            } else {\n              this.router.navigate(['/story/list']);\n            }\n          }\n        },\n        (err: HttpErrorResponse) => {\n          console.log(err);\n          if (err.error instanceof Error) {\n            this.errorMessage = `${err.error.message}`;\n          } else {\n            this.errorMessage = `Er werd geen account gevonden met opgegeven e-mailadres en wachtwoord`;\n          }\n        }\n      );\n  }\n\n  getErrorMessage(errors: any) {\n    //opvangen van de validators\n    if (!errors) {\n      return null;\n    }\n\n    else if (errors.required) {\n      return 'Dit moet moet ingevuld worden';\n    }\n\n    else if (errors.email){\n      return 'Geen geldige email'\n    }\n  }\n}\n","<div class=\"login-main\">\n  <mat-card data-cy=\"login\">\n    <form [formGroup]=\"user\" (ngSubmit)=\"onSubmit()\">\n      <mat-card-title>Login</mat-card-title>\n\n      <mat-card-content>\n        <div class=\"input\">\n          <div class=\"veld\">\n            <mat-form-field>\n              <input\n                matInput\n                type=\"email\"\n                placeholder=\"email\"\n                aria-label=\"email\"\n                data-cy=\"login-email\"\n                formControlName=\"email\"\n                required\n              />\n              <mat-error data-cy=\"email-error\" *ngIf=\"user.get('email').errors && user.get('email').touched\">\n                {{getErrorMessage(user.get('email')['errors'])}}\n              </mat-error>\n            </mat-form-field>\n          </div>\n        </div>\n        <div class=\"input\">\n          <mat-form-field>\n            <input\n              matInput\n              type=\"password\"\n              placeholder=\"password\"\n              aria-label=\"password\"\n              data-cy=\"login-password\"\n              formControlName=\"password\"\n              required\n            />\n            <mat-error data-cy=\"password-error\" *ngIf=\"user.get('password').errors && user.get('password').touched\">\n              {{getErrorMessage(user.get('password')['errors'])}}\n            </mat-error>\n          </mat-form-field>\n        </div>\n      </mat-card-content>\n      <mat-card-actions fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n        <button\n          mat-raised-button\n          type=\"submit\"\n          color=\"primary\"\n          data-cy=\"login-button\"\n          [disabled]=\"!user.valid\"\n        >\n          Login\n        </button>\n        <button \n          mat-raised-button \n          type=\"submit\"\n          color=\"secondary\"\n          [routerLink]=\"['/register']\"\n        >\n        Register\n      </button>\n      </mat-card-actions>\n    </form>\n    <mat-card class=\"error\" *ngIf=\"errorMessage\" data-cy=\"appError\">\n      {{ errorMessage }}\n    </mat-card>\n  </mat-card>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-regels',\n  templateUrl: './regels.component.html',\n  styleUrls: ['./regels.component.css']\n})\nexport class RegelsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<ul>\n  <li>At least 8 characters</li>\n  <li>At least 1 lower case letter</li>\n  <li>At leest 1 upper case letter</li>\n  <li>At least 1 number</li>\n</ul>","import { Component, OnInit } from '@angular/core';\nimport {\n  Validators,\n  FormGroup,\n  FormBuilder,\n  ValidatorFn,\n  AbstractControl,\n  ValidationErrors,\n} from '@angular/forms';\nimport { AuthenticationService } from '../authentication.service';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport { RegelsComponent } from '../regels/regels.component';\n\nfunction patternValidator(regex: RegExp, error: ValidationErrors): ValidatorFn {\n  return (control: AbstractControl): { [key: string]: any } => {\n    if (!control.value) {\n      return null;\n    }\n\n    // test the value of the control against the regexp supplied\n    const valid = regex.test(control.value);\n    // if true, return no error (no error), else return error passed in the second parameter\n    return valid ? null : error;\n  };\n}\n\nfunction comparePasswords(control: AbstractControl): { [key: string]: any } {\n  const password = control.get('password');\n  const confirmPassword = control.get('confirmPassword');\n  return password.value === confirmPassword.value\n    ? null\n    : { passwordsDiffer: true };\n}\n\nfunction serverSideValidateUsername(\n  checkAvailabilityFn: (n: string) => Observable<boolean>\n): ValidatorFn {\n  return (control: AbstractControl): Observable<{ [key: string]: any }> => {\n    return checkAvailabilityFn(control.value).pipe(\n      map((available) => {\n        if (available) {\n          return null;\n        }\n        return { userAlreadyExists: true };\n      })\n    );\n  };\n}\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css'],\n  \n})\nexport class RegisterComponent implements OnInit {\n  public user: FormGroup;\n  public errorMessage: string = '';\n\n  constructor(\n    private authService: AuthenticationService,\n    private router: Router,\n    private fb: FormBuilder,\n    private _snackBar: MatSnackBar\n  ) {}\n\n  openRegels() {\n    this._snackBar.openFromComponent(RegelsComponent, {\n      duration: 3000\n    });\n  }\n\n  ngOnInit() {\n    this.user = this.fb.group({\n      nickname: ['', Validators.required],\n      email: [\n        '',\n        [Validators.required, Validators.email],\n        serverSideValidateUsername(this.authService.checkUserNameAvailability),\n      ],\n      passwordGroup: this.fb.group(\n        {\n          password: [\n            '',\n            [\n              Validators.required,\n              Validators.minLength(8),\n              patternValidator(/\\d/, { hasNumber: true }),\n              patternValidator(/[A-Z]/, { hasUpperCase: true }),\n              patternValidator(/[a-z]/, { hasLowerCase: true }),\n            ],\n          ],\n          confirmPassword: ['', Validators.required],\n        },\n        { validator: comparePasswords }\n      ),\n    });\n  }\n\n  getErrorMessage(errors: any) {\n    if (!errors) {\n      return null;\n    }\n    if (errors.required) {\n      return 'is required';\n    } else if (errors.minlength) {\n      return `needs at least ${errors.minlength.requiredLength} characters (got ${errors.minlength.actualLength})`;\n    } else if (errors.hasNumber) {\n      return `needs at least 1 number`;\n    } else if (errors.hasUpperCase) {\n      return `needs at least 1 upper case letter`;\n    } else if (errors.hasNumber) {\n      return `needs at least 1 lower case letter`;\n    } else if (errors.userAlreadyExists) {\n      return `email already used`;\n    } else if (errors.email) {\n      return `not a valid email address`;\n    } else if (errors.passwordsDiffer) {\n      return `passwords are not the same`;\n    }\n  }\n\n  onSubmit() {\n    this.authService\n      .register(\n        this.user.value.nickname,\n        this.user.value.email,\n        this.user.value.passwordGroup.password\n      )\n      .subscribe(\n        (val) => {\n          if (val) {\n            if (this.authService.redirectUrl) {\n              this.router.navigateByUrl(this.authService.redirectUrl);\n              this.authService.redirectUrl = undefined;\n            } else {\n              this.router.navigate(['/story/list']);\n            }\n          } else {\n            this.errorMessage = `Could not login`;\n          }\n        },\n        (err: HttpErrorResponse) => {\n          console.log(err);\n          if (err.error instanceof Error) {\n            this.errorMessage = `Error while trying to login user ${this.user.value.email}: ${err.error.message}`;\n          } else {\n            this.errorMessage = `één of meerdere velden zijn onjuist ingevuld`;\n          }\n        }\n      );\n  }\n}\n","<div class=\"login-main\">\n    <mat-card data-cy=\"register\">\n      <form [formGroup]=\"user\" (ngSubmit)=\"onSubmit()\">\n        <mat-card-title>Register</mat-card-title>\n        <mat-card-content fxLayout=\"column\">\n          <span fxLayout=\"row\" fxLayoutGap=\"2%\">\n            <mat-form-field>\n              <input\n                matInput\n                placeholder=\"nickname\"\n                aria-label=\"nickname\"\n                data-cy=\"register-nickname\"\n                formControlName=\"nickname\"\n              />\n              <mat-error\n                *ngIf=\"\n                  user.get('nickname').errors && user.get('nickname').touched\n                \"\n              >\n                {{ getErrorMessage(user.get('nickname').errors) }}\n              </mat-error>\n            </mat-form-field>\n          </span>\n          <mat-form-field>\n            <input\n              matInput\n              placeholder=\"email\"\n              aria-label=\"email\"\n              data-cy=\"register-email\"\n              formControlName=\"email\"\n            />\n            <mat-error\n              *ngIf=\"user.get('email').errors && user.get('email').touched\"\n            >\n              {{ getErrorMessage(user.get('email').errors) }}\n            </mat-error>\n          </mat-form-field>\n          <span fxLayout=\"column\" formGroupName=\"passwordGroup\">\n            <div class=\"rij\">\n              <button type=\"button\" class=\"regels\" mat-stroked-button (click)=\"openRegels()\" aria-label=\"Show an example snack-bar\">\n                ?\n              </button>\n              <mat-form-field class=\"password\">\n                <input\n                  class=\"password\"\n                  type=\"password\"\n                  matInput\n                  placeholder=\"password\"\n                  aria-label=\"password\"\n                  data-cy=\"register-password\"\n                  formControlName=\"password\"\n                />\n                <mat-error\n                  *ngIf=\"\n                    user.get('passwordGroup').get('password').errors &&\n                    user.get('passwordGroup').get('password').touched\n                  \"\n                >\n                  {{\n                    getErrorMessage(\n                      user.get('passwordGroup').get('password').errors\n                    )\n                  }}\n                </mat-error>\n              </mat-form-field>\n            </div>\n            <mat-form-field>\n              <input\n                type=\"password\"\n                matInput\n                placeholder=\"confirm password\"\n                aria-label=\"confirm password\"\n                data-cy=\"register-confirm-password\"\n                formControlName=\"confirmPassword\"\n              />\n              <mat-error\n                *ngIf=\"\n                  user.get('passwordGroup').get('confirmPassword').errors &&\n                  user.get('passwordGroup').get('confirmPassword').touched\n                \"\n              >\n                {{\n                  getErrorMessage(\n                    user.get('passwordGroup').get('confirmPassword').errors\n                  )\n                }}\n              </mat-error>\n            </mat-form-field>\n            <mat-error\n              *ngIf=\"\n                user.get('passwordGroup').errors &&\n                user.get('passwordGroup').get('confirmPassword').touched &&\n                user.get('passwordGroup').get('password').touched\n              \"\n            >\n              {{ getErrorMessage(user.get('passwordGroup').errors) }}\n            </mat-error>\n          </span>\n        </mat-card-content>\n  \n        <mat-card-actions fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n          <button\n            mat-raised-button\n            type=\"submit\"\n            color=\"primary\"\n            data-cy=\"register-button\"\n            [disabled]=\"!user.valid\"\n          >\n            Register\n          </button>\n\n          <button \n            mat-raised-button\n            type=\"submit\"\n            color=\"secondary\"\n            data-cy=\"login-button\"\n            [routerLink]=\"['/login']\">Login</button>\n\n        </mat-card-actions>\n      </form>\n\n      <mat-card class=\"error\" *ngIf=\"errorMessage\" data-cy=\"appError\">\n        {{ errorMessage }}\n      </mat-card>\n    </mat-card>\n  </div>\n  ","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { MaterialModule } from '../material/material.module';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RegelsComponent } from './regels/regels.component';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\nconst routes: Routes = [\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent },\n];\n\n@NgModule({\n  declarations: [LoginComponent, RegisterComponent, RegelsComponent],\n  imports: [\n    CommonModule,\n    MaterialModule,\n    ReactiveFormsModule,\n    RouterModule.forChild(routes),\n  ],\n  providers: [ MatSnackBar ]\n})\nexport class UserModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: '/api'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}