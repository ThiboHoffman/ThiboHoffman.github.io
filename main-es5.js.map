{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/SelectivePreloadStrategy.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/interceptors/authentication-interceptor.ts","webpack:///src/app/interceptors/index.ts","webpack:///src/app/main-nav/main-nav.component.ts","webpack:///src/app/main-nav/main-nav.component.html","webpack:///src/app/material/material.module.ts","webpack:///src/app/page-not-found/page-not-found.component.ts","webpack:///src/app/page-not-found/page-not-found.component.html","webpack:///src/app/story/StoryResolver.ts","webpack:///src/app/story/add-story/add-story.component.ts","webpack:///src/app/story/add-story/add-story.component.html","webpack:///src/app/story/chapter.model.ts","webpack:///src/app/story/chapter/chapter.component.ts","webpack:///src/app/story/chapter/chapter.component.html","webpack:///src/app/story/favorite-story-list/favorite-story-list.component.ts","webpack:///src/app/story/favorite-story-list/favorite-story-list.component.html","webpack:///src/app/story/my-story-list/my-story-list.component.ts","webpack:///src/app/story/my-story-list/my-story-list.component.html","webpack:///src/app/story/story-data.service.ts","webpack:///src/app/story/story-detail/story-detail.component.html","webpack:///src/app/story/story-detail/story-detail.component.ts","webpack:///src/app/story/story-filter.pipe.ts","webpack:///src/app/story/story-list/story-list.component.ts","webpack:///src/app/story/story-list/story-list.component.html","webpack:///src/app/story/story.model.ts","webpack:///src/app/story/story.module.ts","webpack:///src/app/story/story/story.component.ts","webpack:///src/app/story/story/story.component.html","webpack:///src/app/user/auth.guard.ts","webpack:///src/app/user/authentication.service.ts","webpack:///src/app/user/login/login.component.ts","webpack:///src/app/user/login/login.component.html","webpack:///src/app/user/regels/regels.component.ts","webpack:///src/app/user/regels/regels.component.html","webpack:///src/app/user/register/register.component.ts","webpack:///src/app/user/register/register.component.html","webpack:///src/app/user/user.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","SelectivePreloadStrategy","route","load","data","preload","console","log","path","providedIn","appRoutes","component","canActivate","story","redirectTo","pathMatch","AppRoutingModule","forRoot","preloadingStrategy","declarations","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","providers","bootstrap","AuthenticationInterceptor","authService","next","token","length","clonedRequest","clone","headers","set","handle","httpInterceptorProviders","provide","useClass","multi","MainNavComponent","breakpointObserver","_authenticationService","_router","loggedInUser$","user$","isHandset$","observe","Handset","pipe","result","matches","logout","navigate","MaterialModule","PageNotFoundComponent","StoryResolver","storyService","state","getStory$","params","AddStoryComponent","fb","_storyDataService","errorMessage","confirmationMessage","group","storyName","required","minLength","chapterName","inhoud","addNewStory","value","Date","Array","err","subscribe","rec","name","errors","minlength","requiredLength","actualLength","amountNoName","onSubmit","Chapter","_name","_number","_dateAdded","_text","_author","number","dateAdded","text","author","json","ing","ChapterComponent","FavoriteStoryListComponent","filterStory$","val","toLowerCase","filterStoryName","_fetchStories$","favoriteStories$","filter","MyStoryListComponent","myStories$","confirm","deleteStory","StoryDataService","http","_stories$","stories$","error","stories","_stories","get","apiUrl","handleError","fromJSON","list","map","post","toJSON","put","ErrorEvent","message","status","statusText","url","StoryDetailComponent","_isLoading","item","_fetchChapters$","getChapters$","favorited$","isFavorited$","chapterfg","chaptersforms","array","createChapters","valueChanges","ingList","lastElement","push","secondToLast","removeAt","chapters","fromJSONCreate","addChapters","updateStory","favorite","StoryFilterPipe","startsWith","StoryListComponent","allStories$","navigateByUrl","Story","_favorites","_chapters","favorites","chapterlist","forEach","chapter","currentDate","_id","routes","StoryModule","forChild","StoryComponent","showStory","AuthGuard","router","getValue","redirectUrl","parseJwt","base64Token","split","base64","replace","JSON","parse","window","atob","AuthenticationService","_tokenKey","checkUserNameAvailability","email","checkNicknameAvailability","nickname","parsedToken","localStorage","getItem","expires","parseInt","exp","removeItem","_user$","unique_name","password","responseType","setItem","passwordConfirmation","localToken","comparePasswords","control","confirmPassword","passwordsDiffer","LoginComponent","user","login","undefined","RegelsComponent","patternValidator","regex","valid","test","serverSideValidateUsername","checkAvailabilityFn","available","userAlreadyExists","RegisterComponent","_snackBar","openFromComponent","duration","passwordGroup","hasNumber","hasUpperCase","hasLowerCase","validator","register","openRegels","UserModule","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\r\nimport { PreloadingStrategy, Route } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class SelectivePreloadStrategy implements PreloadingStrategy {\r\n  preload(route: Route, load: Function): Observable<any> {\r\n    if (route.data && route.data.preload) {\r\n      console.log('preload ' + route.path);\r\n      return load();\r\n    }\r\n    return of(null);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { AuthGuard } from './user/auth.guard';\nimport { SelectivePreloadStrategy } from './SelectivePreloadStrategy';\nimport { LoginComponent } from './user/login/login.component';\nimport { RegisterComponent } from './user/register/register.component';\nimport { StoryListComponent } from './story/story-list/story-list.component';\nimport { AddStoryComponent } from './story/add-story/add-story.component';\nimport { MyStoryListComponent } from './story/my-story-list/my-story-list.component';\nimport { StoryDetailComponent } from './story/story-detail/story-detail.component';\nimport { StoryResolver } from './story/StoryResolver';\nimport { FavoriteStoryListComponent } from './story/favorite-story-list/favorite-story-list.component';\n\n\nconst appRoutes: Routes = [\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent },\n  { path: 'story/list', component: StoryListComponent },\n  { path: 'story/myList', component: MyStoryListComponent, canActivate: [AuthGuard] },\n  { path: 'story/favoriteList', component: FavoriteStoryListComponent, canActivate: [AuthGuard] },\n  { path: 'story/add', component: AddStoryComponent, canActivate: [AuthGuard] },\n  {\n    path: 'story/:id', \n    component: StoryDetailComponent, \n    resolve: { story: StoryResolver }\n  },\n  { path: '', redirectTo: 'story/list', pathMatch: 'full' },\n  { path: '**', component: PageNotFoundComponent },\n];\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    RouterModule.forRoot(appRoutes, {\n      preloadingStrategy: SelectivePreloadStrategy,\n    }),\n  ],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'coWrite';\n}\n","<app-main-nav>\n  <router-outlet></router-outlet>\n</app-main-nav>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { StoryModule } from './story/story.module';\nimport { MaterialModule } from './material/material.module';\nimport { AppRoutingModule } from './app-routing.module';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { MainNavComponent } from './main-nav/main-nav.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { UserModule } from './user/user.module';\nimport { httpInterceptorProviders } from './interceptors';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PageNotFoundComponent,\n    MainNavComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    StoryModule,\n    AppRoutingModule,\n    MaterialModule,\n    HttpClientModule,\n    UserModule,\n    AppRoutingModule,\n  ],\n  providers: [httpInterceptorProviders],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {\r\n    HttpInterceptor,\r\n    HttpRequest,\r\n    HttpHandler,\r\n    HttpEvent,\r\n  } from '@angular/common/http';\r\n  import { Injectable } from '@angular/core';\r\n  import { AuthenticationService } from '../user/authentication.service';\r\n  import { Observable } from 'rxjs';\r\n  \r\n  @Injectable()\r\n  export class AuthenticationInterceptor implements HttpInterceptor {\r\n    constructor(private authService: AuthenticationService) {}\r\n  \r\n    intercept(\r\n      req: HttpRequest<any>,\r\n      next: HttpHandler\r\n    ): Observable<HttpEvent<any>> {\r\n      if (this.authService.token.length) {\r\n        const clonedRequest = req.clone({\r\n          headers: req.headers.set(\r\n            'Authorization',\r\n            `Bearer ${this.authService.token}`\r\n          ),\r\n        });\r\n        return next.handle(clonedRequest);\r\n      }\r\n      return next.handle(req);\r\n    }\r\n  }\r\n  ","import { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { AuthenticationInterceptor } from './authentication-interceptor';\r\n\r\nexport const httpInterceptorProviders = [\r\n  {\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: AuthenticationInterceptor,\r\n    multi: true\r\n  }\r\n];\r\n","import { Component } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { AuthenticationService } from '../user/authentication.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-main-nav',\n  templateUrl: './main-nav.component.html',\n  styleUrls: ['./main-nav.component.css'],\n})\nexport class MainNavComponent {\n  loggedInUser$ = this._authenticationService.user$;\n\n  isHandset$: Observable<boolean> = this.breakpointObserver\n    .observe(Breakpoints.Handset)\n    .pipe(\n      map((result) => result.matches),\n      shareReplay()\n    );\n\n  constructor(\n    private breakpointObserver: BreakpointObserver,\n    private _authenticationService: AuthenticationService,\n    private _router: Router\n  ) {}\n\n  logout() {\n    this._authenticationService.logout();\n  }\n  login() {\n    console.log('login');\n    this._router.navigate(['/login']);\n  }\n}\n","<mat-sidenav-container class=\"sidenav-container\">\n  <mat-sidenav-content>\n    <mat-toolbar color=\"primary\">\n      <img src=\"../../assets/coWriteLogo.png\"  width=\"150\" height=\"80\" alt=\"logo\">\n      <ul>\n        <li>\n          <a data-cy=\"stories\" mat-list-item [routerLink]=\"['story/list']\">Stories</a>\n        </li>\n        <li>\n          <a data-cy=\"myStories\" mat-list-item [routerLink]=\"['story/myList']\">My stories</a>\n        </li>\n        <li>\n          <a data-cy=\"favStories\" mat-list-item [routerLink]=\"['story/favoriteList']\">Favorite stories</a>\n        </li>\n        <li>\n          <a data-cy=\"addStory\" mat-list-item [routerLink]=\"['story/add']\">\n            <mat-icon [inline]=\"true\">add_circle_outline</mat-icon> New story</a>\n        </li>\n      </ul>\n      <div fxFlex fxLayout fxLayoutAlign=\"end\" fxHide.xs>\n        <span *ngIf=\"loggedInUser$ | async as user; else loginTemplate\">\n          <mat-icon [inline]=\"true\">account_circle</mat-icon> {{ user }}\n          <button data-cy=\"logout\" (click)=\"logout()\" mat-flat-button>\n            logout\n          </button>\n        </span>\n        <ng-template #loginTemplate>\n          <span>\n            <button (click)=\"login()\" mat-flat-button>\n              login\n            </button>\n          </span>\n        </ng-template>\n      </div>\n    </mat-toolbar>\n    <ng-content></ng-content>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatListModule } from '@angular/material/list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatOptionModule } from '@angular/material/core';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { LayoutModule } from '@angular/cdk/layout';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    FlexLayoutModule,\n    MatListModule,\n    MatCardModule,\n    MatIconModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatProgressSpinnerModule,\n    MatOptionModule,\n    MatSelectModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    LayoutModule\n  ],\n  exports: [\n    FlexLayoutModule,\n    MatListModule,\n    MatCardModule,\n    MatIconModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatProgressSpinnerModule,\n    MatOptionModule,\n    MatSelectModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    LayoutModule\n  ]\n})\nexport class MaterialModule {}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-error data-cy=\"appError\">\n    404: page not found\n</mat-error>\n    \n","import {\r\n    Resolve,\r\n    RouterStateSnapshot,\r\n    ActivatedRouteSnapshot\r\n  } from '@angular/router';\r\n  import { Story } from './story.model';\r\n  import { Injectable } from '@angular/core';\r\n  import { StoryDataService } from './story-data.service';\r\n  import { Observable } from 'rxjs';\r\n  \r\n  @Injectable({\r\n    providedIn: 'root'\r\n  })\r\n  export class StoryResolver implements Resolve<Story> {\r\n    constructor(private storyService: StoryDataService) {}\r\n\r\n    resolve(\r\n      route: ActivatedRouteSnapshot,\r\n      state: RouterStateSnapshot\r\n    ): Observable<Story> {\r\n      return this.storyService.getStory$(route.params['id']);\r\n    }\r\n  }\r\n  ","import { StoryDataService } from './../story-data.service';\nimport { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport {\n  FormGroup,\n  FormControl,\n  Validators,\n  FormBuilder,\n  FormArray,\n  ReactiveFormsModule\n} from '@angular/forms';\nimport { debounceTime, distinctUntilChanged, catchError } from 'rxjs/operators';\nimport { EMPTY } from 'rxjs';\nimport { Story } from '../story.model';\nimport { Chapter } from '../chapter.model';\n\n@Component({\n  selector: 'app-add-story',\n  templateUrl: './add-story.component.html',\n  styleUrls: ['./add-story.component.css'],\n})\nexport class AddStoryComponent implements OnInit {\n  public story: FormGroup;\n  public errorMessage: string = '';\n  public confirmationMessage: string = '';\n\n  constructor(\n    private fb: FormBuilder,\n    private _storyDataService: StoryDataService\n  ) {}\n\n  ngOnInit() {\n    this.story = this.fb.group({\n      storyName: ['', [Validators.required, Validators.minLength(2)]],\n      chapterName: [''],\n      inhoud: ['']\n    });\n  }\n\n  onSubmit() {\n    this._storyDataService\n      .addNewStory(new Story(this.story.value.storyName, 1, \"\", new Date(), new Array(new Chapter(this.story.value.chapterName, 1, new Date(), this.story.value.inhoud, \"\"))))\n      .pipe(\n        catchError((err) => {\n          this.errorMessage = err;\n          return EMPTY;\n        })\n      )\n      .subscribe((rec: Story) => {\n        this.confirmationMessage = `a story for ${rec.name} was successfully added`;\n      });\n\n    this.story = this.fb.group({\n      storyName: ['', [Validators.required, Validators.minLength(2)]],\n      chapterName: [''],\n      inhoud: ['']\n    });\n  }\n\n  getErrorMessage(errors: any): string {\n    if (!errors) {\n      return null;\n    }\n    if (errors.required) {\n      return 'is required';\n    } else if (errors.minlength) {\n      return `needs at least ${errors.minlength.requiredLength} characters (got ${errors.minlength.actualLength})`;\n    } else if (errors.amountNoName) {\n      return `if amount is set you must set a name`;\n    }\n  }\n}\n","<mat-card>\n  <mat-card-content>\n    <form [formGroup]=\"story\" (ngSubmit)=\"onSubmit()\">\n      <mat-form-field>\n            <input\n              matInput\n              type=\"text\"\n              aria-label=\"storyName\"\n              placeholder=\"Name of story\"\n              formControlName=\"storyName\"\n            />\n            <mat-error\n            *ngIf=\"story.get('storyName')['errors'] && story.get('storyName').touched\"\n          >\n            {{ getErrorMessage(story.get('storyName')['errors']) }}\n          </mat-error>\n      </mat-form-field>\n\n          <mat-form-field>\n                <input\n                  matInput\n                  type=\"text\"\n                  aria-label=\"chapterName\"\n                  placeholder=\"Name of first chapter\"\n                  formControlName=\"chapterName\"\n                />\n          </mat-form-field>\n          <mat-form-field>\n                <textarea\n                  matInput\n                  type=\"text\"\n                  aria-label=\"inhoud\"\n                  placeholder=\"Text\"\n                  formControlName=\"inhoud\"\n                  rows=\"20\"\n                ></textarea>\n          </mat-form-field>\n      <button data-cy=\"create\" mat-raised-button type=\"submit\" [disabled]='!story.valid'>\n        Create story\n      </button>\n    </form>\n  </mat-card-content>\n</mat-card>\n<mat-card class=\"error\" *ngIf=\"errorMessage\" data-cy=\"appError\">\n  got an error while adding the story: {{ errorMessage }}\n</mat-card>\n<mat-card\n  class=\"confirmation\"\n  *ngIf=\"confirmationMessage\"\n  data-cy=\"appConfirmation\">\n  {{ confirmationMessage }}\n</mat-card>\n","export interface ChapterJson {\r\n    name: string;\r\n    number: number;\r\n    dateAdded: Date;\r\n    text: string;\r\n    author: string;\r\n  }\r\n\r\nexport interface ChapterCreateJson {\r\n  chapterName: string;\r\n  text: string;\r\n}\r\n\r\n\r\n  export class Chapter {\r\n    constructor(\r\n      private _name: string,\r\n      private _number = 1,\r\n      private _dateAdded = new Date(),\r\n      private _text: string,\r\n      private _author: string\r\n    ) {}\r\n  \r\n    static fromJSON(json: ChapterJson): Chapter {\r\n      const ing = new Chapter(\r\n        json.name, \r\n        json.number, \r\n        new Date(json.dateAdded), \r\n        json.text, \r\n        json.author);\r\n      return ing;\r\n    }\r\n\r\n    static fromJSONCreate(json: ChapterCreateJson): Chapter {\r\n      const ing = new Chapter(\r\n        json.chapterName,\r\n        1,\r\n        new Date(),\r\n        json.text,\r\n        \"\");\r\n      return ing;\r\n    }\r\n  \r\n    toJSON(): ChapterJson {\r\n      return { name: this.name, \r\n              number: this._number, \r\n              dateAdded: this._dateAdded, \r\n              text: this._text, author: \r\n              this._author };\r\n    }\r\n  \r\n    get name() {\r\n      return this._name;\r\n    }\r\n    get number() {\r\n        return this._number;\r\n    }\r\n\r\n    get dateAdded() {\r\n        return this._dateAdded\r\n    } \r\n    \r\n    get text() {\r\n        return this._text;\r\n    }\r\n\r\n    get author() {\r\n        return this._author;\r\n    }\r\n  }\r\n  ","import { Component, OnInit, Input } from '@angular/core';\nimport { Chapter } from '../chapter.model';\n\n@Component({\n  selector: 'app-chapter',\n  templateUrl: './chapter.component.html',\n  styleUrls: ['./chapter.component.css']\n})\nexport class ChapterComponent implements OnInit {\n  @Input() chapter: Chapter;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-card>\r\n    <mat-card-header>\r\n      <mat-card-title\r\n        >{{ chapter.number }}: {{ chapter.name }}\r\n      </mat-card-title>\r\n      <mat-card-subtitle>\r\n          written by {{chapter.author}}\r\n      </mat-card-subtitle> \r\n    </mat-card-header>\r\n    <mat-card-content>\r\n        {{ chapter.text }}\r\n    </mat-card-content>\r\n    <mat-card-footer>\r\n        added on {{ chapter.dateAdded | date:'dd-MM-yyyy' }}\r\n    </mat-card-footer> \r\n</mat-card>\r\n  ","import { Component, OnInit } from '@angular/core';\nimport { Story } from '../story.model';\nimport { StoryDataService } from '../story-data.service';\nimport { Subject, Observable, of, EMPTY, merge } from 'rxjs';\nimport {\n  distinctUntilChanged,\n  debounceTime,\n  map,\n  filter,\n  catchError,\n  scan,\n} from 'rxjs/operators';\nimport { AuthenticationService } from 'src/app/user/authentication.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-favorite-story-list',\n  templateUrl: './favorite-story-list.component.html',\n  styleUrls: ['./favorite-story-list.component.css'],\n})\n\nexport class FavoriteStoryListComponent implements OnInit {\n  public filterStoryName: string;\n  public filterStory$ = new Subject<string>();\n  private _fetchStories$: Observable<Story[]>;\n\n  public errorMessage: string = '';\n\n  constructor(private route: ActivatedRoute, private _storyDataService: StoryDataService) {\n    this.filterStory$\n      .pipe(\n        distinctUntilChanged(),\n        debounceTime(400),\n        map((val) => val.toLowerCase())\n      )\n      .subscribe((val) => (this.filterStoryName = val));\n  }\n\n  ngOnInit(): void {\n    this._fetchStories$ = this._storyDataService.favoriteStories$.pipe(\n      catchError((err) => {\n        this.errorMessage = err;\n        return EMPTY;\n      })\n    );\n  }\n\n  applyFilter(filter: string) {\n    this.filterStoryName = filter;\n  }\n\n  get stories$(): Observable<Story[]> {\n    return this._fetchStories$;\n  }\n}\n","<div fxLayout=\"column\" fxLayoutGap=\"2%\">\n  <mat-card>\n    <mat-form-field>\n      <input\n        matInput\n        (keyup)=\"filterStory$.next($event.target.value)\"\n        placeholder=\"filter\"\n        type=\"text\"\n        data-cy=\"filterInput\"\n      />\n    </mat-form-field>\n  </mat-card>\n  <mat-card class=\"error\" *ngIf=\"errorMessage\" data-cy=\"appError\">\n    got an error while loading the story list: {{ errorMessage }}\n  </mat-card>\n  <div *ngIf=\"stories$ | async as stories; else loadingOrError\">\n    <div\n      fxLayout=\"row wrap\"\n      fxLayout.xs=\"column\"\n      fxLayoutGap=\"0.5%\"\n      fxLayoutAlign=\"start\"\n    >\n      <div\n        class=\"story\"\n        *ngFor=\"let story of stories | storyFilter: filterStoryName\"\n        fxFlex=\"0 0 calc(25%-0.5%)\"\n        fxFlex.xs=\"100%\"\n      >\n        <app-story [story]=\"story\"></app-story>\n      </div>\n    </div>\n  </div>\n\n  <ng-template #loadingOrError>\n    <span *ngIf=\"errorMessage; else loading\"></span>\n    <ng-template #loading>\n      <mat-spinner></mat-spinner>\n    </ng-template>\n  </ng-template>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Story } from '../story.model';\nimport { StoryDataService } from '../story-data.service';\nimport { Subject, Observable, of, EMPTY, merge } from 'rxjs';\nimport {\n  distinctUntilChanged,\n  debounceTime,\n  map,\n  filter,\n  catchError,\n  scan,\n} from 'rxjs/operators';\nimport { AuthenticationService } from 'src/app/user/authentication.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-my-story-list',\n  templateUrl: './my-story-list.component.html',\n  styleUrls: ['./my-story-list.component.css'],\n})\n\nexport class MyStoryListComponent implements OnInit {\n  public filterStoryName: string;\n  public filterStory$ = new Subject<string>();\n  private _fetchStories$: Observable<Story[]>;\n\n  public errorMessage: string = '';\n\n  constructor(private route: ActivatedRoute, private _storyDataService: StoryDataService) {\n    this.filterStory$\n      .pipe(\n        distinctUntilChanged(),\n        debounceTime(400),\n        map((val) => val.toLowerCase())\n      )\n      .subscribe((val) => (this.filterStoryName = val));\n  }\n\n  ngOnInit(): void {\n    this._fetchStories$ = this._storyDataService.myStories$.pipe(\n      catchError((err) => {\n        this.errorMessage = err;\n        return EMPTY;\n      })\n    );\n  }\n\n  applyFilter(filter: string) {\n    this.filterStoryName = filter;\n  }\n\n  get stories$(): Observable<Story[]> {\n    return this._fetchStories$;\n  }\n\n  deleteStory(story: Story) {\n    if (confirm(\"Are you sure you want to delete \" + story.name)) {\n      this._storyDataService.deleteStory(story);\n      this._fetchStories$ = this._storyDataService.myStories$.pipe(\n        catchError((err) => {\n          this.errorMessage = err;\n          return EMPTY;\n        })\n      );\n    }\n  }\n}\n","<div fxLayout=\"column\" fxLayoutGap=\"2%\">\n  <mat-card>\n    <mat-form-field>\n      <input\n        matInput\n        (keyup)=\"filterStory$.next($event.target.value)\"\n        placeholder=\"filter\"\n        type=\"text\"\n        data-cy=\"filterInput\"\n      />\n    </mat-form-field>\n  </mat-card>\n  <mat-card class=\"error\" *ngIf=\"errorMessage\" data-cy=\"appError\">\n    got an error while loading the story list: {{ errorMessage }}\n  </mat-card>\n  <div *ngIf=\"stories$ | async as stories; else loadingOrError\">\n    <div\n      fxLayout=\"row wrap\"\n      fxLayout.xs=\"column\"\n      fxLayoutGap=\"0.5%\"\n      fxLayoutAlign=\"start\"\n    >\n      <div\n        class=\"story\"\n        *ngFor=\"let story of stories | storyFilter: filterStoryName\"\n        fxFlex=\"0 0 calc(25%-0.5%)\"\n        fxFlex.xs=\"100%\"\n      >\n        <app-story [story]=\"story\"></app-story>\n        <button mat-button (click)=\"deleteStory(story)\">\n          <mat-icon>delete_forever</mat-icon>\n        </button>\n      </div>\n    </div>\n  </div>\n\n  <ng-template #loadingOrError>\n    <span *ngIf=\"errorMessage; else loading\"></span>\n    <ng-template #loading>\n      <mat-spinner></mat-spinner>\n    </ng-template>\n  </ng-template>\n</div>\n","import { Injectable, OnInit } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { map, catchError, tap, shareReplay, switchMap } from 'rxjs/operators';\nimport { Story } from './story.model';\nimport { Observable, throwError, BehaviorSubject, of } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { Chapter } from './chapter.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class StoryDataService {\n  private _stories$ = new BehaviorSubject<Story[]>([]);\n  private _stories: Story[];\n  private _chapters: Chapter[];\n  allChapters$: any;\n\n  constructor(private http: HttpClient) {\n    this.stories$\n      .pipe(\n        catchError((err) => {\n          // temporary fix, while we use the behaviorsubject as a cache stream\n          this._stories$.error(err);\n          return throwError(err);\n        })\n      )\n      .subscribe((stories: Story[]) => {\n        this._stories = stories;\n        this._stories$.next(this._stories);\n      });\n  }\n\n  get allStories$(): Observable<Story[]> {\n    return this._stories$;\n  }\n\n  get myStories$(): Observable<Story[]> {\n    return this.http.get(`${environment.apiUrl}/stories/MyStories`).pipe(\n      tap(console.log),\n      shareReplay(1),\n      catchError(this.handleError),\n      map((list: any[]): Story[] => list.map(Story.fromJSON))\n    );\n  }\n\n  get favoriteStories$(): Observable<Story[]> {\n    return this.http.get(`${environment.apiUrl}/author/favoriteStories`).pipe(\n      tap(console.log),\n      shareReplay(1),\n      catchError(this.handleError),\n      map((list: any[]): Story[] => list.map(Story.fromJSON))\n    );\n  }\n\n  get stories$(): Observable<Story[]> {\n    return this.http.get(`${environment.apiUrl}/stories/`).pipe(\n      tap(console.log),\n      shareReplay(1),\n      catchError(this.handleError),\n      map((list: any[]): Story[] => list.map(Story.fromJSON))\n    );\n  }\n\n  getStory$(id: number): Observable<Story> {\n    return this.http\n      .get(`${environment.apiUrl}/stories/${id}`)\n      .pipe(catchError(this.handleError), map(Story.fromJSON)); // returns just one recipe, as json\n  }\n\n  getChapters$(id: number): Observable<Chapter[]> {\n    return this.http\n      .get(`${environment.apiUrl}/stories/chapters/${id}`)\n      .pipe(tap(console.log),\n            shareReplay(1),\n            catchError(this.handleError), \n            map((list: any[]): Chapter[] => list.map(Chapter.fromJSON)))\n  }\n\n  isFavorited$(id: number): Observable<boolean> {\n    return this.http\n      .get(`${environment.apiUrl}/author/isFavorited/${id}`)\n      .pipe(tap(console.log),\n            shareReplay(1),\n            catchError(this.handleError))\n  }\n\n  favorite(story: Story) {\n    return this.http\n      .post(`${environment.apiUrl}/author/`, story.toJSON())\n      .pipe(tap(console.log), catchError(this.handleError), map(Story.fromJSON));\n  }\n\n  addNewStory(story: Story) {\n    return this.http\n      .post(`${environment.apiUrl}/stories/`, story.toJSON())\n      .pipe(catchError(this.handleError), map(Story.fromJSON))\n      .pipe(\n        // temporary fix, while we use the behaviorsubject as a cache stream\n        catchError((err) => {\n          this._stories$.error(err);\n          return throwError(err);\n        }),\n        tap((rec: Story) => {\n          this._stories = [...this._stories, rec];\n          this._stories$.next(this._stories);\n        })\n      );\n  }\n\n  updateStory(story: Story) {\n    return this.http\n      .put(`${environment.apiUrl}/stories/${story.id}`, story.toJSON())\n      .pipe(tap(console.log), catchError(this.handleError))\n      .subscribe(() => {\n        this._stories = this._stories.filter((rec) => rec.id != story.id);\n        this._stories$.next(this._stories);\n      });\n  }\n\n  deleteStory(story: Story) {\n    return this.http\n      .delete(`${environment.apiUrl}/stories/${story.id}`)\n      .pipe(tap(console.log), catchError(this.handleError))\n      .subscribe(() => {\n        this._stories = this._stories.filter((rec) => rec.id != story.id);\n        this._stories$.next(this._stories);\n      });\n  }\n\n  handleError(err: any): Observable<never> {\n    let errorMessage: string;\n    if (err.error instanceof ErrorEvent) {\n      errorMessage = `An error occurred: ${err.error.message}`;\n    } else if (err instanceof HttpErrorResponse) {\n      console.log(err);\n      errorMessage = `'${err.status} ${err.statusText}' when accessing '${err.url}'`;\n    } else {\n      errorMessage = err;\n    }\n    return throwError(errorMessage);\n  }\n}\n","<div class=\"container\">\n  <mat-card>\n  <mat-card-header>\n    <mat-card-title\n      ><mat-icon>menu_book</mat-icon> {{ story.name }} created by {{ story.author }}\n    </mat-card-title>\n    <mat-card-subtitle>\n      added on {{ story.dateAdded | date:'dd-MM-yyyy' }}</mat-card-subtitle>\n  </mat-card-header>\n  <mat-card-content>\n    <div *ngIf=\"isFavorited$ | async; else favorite\">\n      <button mat-button (click)=\"favoriteStory()\">\n        <mat-icon>favorite</mat-icon>\n        Favorited\n      </button>\n    </div>\n    <ng-template #favorite>\n      <button mat-button (click)=\"favoriteStory()\">\n        <mat-icon>favorite_border</mat-icon>\n        Favorite\n      </button>\n    </ng-template>\n    <h3 mat-subheader>Chapters</h3>\n    <div *ngIf=\"allChapters$ | async as chapters; else loadingOrError\">\n      <div\n        fxLayout=\"column\"\n        fxLayoutGap=”32px”\n        fxLayoutAlign=\"start start\"\n      >\n        <div\n          class=\"chapter\"\n          *ngFor=\"let chapter of chapters\"\n          fxFlex=\"0 0 calc(25%-0.5%)\"\n          fxFlex.xs=\"100%\"\n        >\n      <app-chapter [chapter]=\"chapter\"></app-chapter>\n        </div>\n      </div>\n    </div>\n    <ng-template #loadingOrError>\n      <span *ngIf=\"errorMessage; else loading\"></span>\n      <ng-template #loading>\n        <mat-spinner ></mat-spinner>\n      </ng-template>\n    </ng-template>\n  </mat-card-content>\n  </mat-card>\n  <mat-card>\n  <h3 mat-subheader>Add a chapter</h3>\n  <mat-card-content>\n    <form [formGroup]=\"chapterfg\" (ngSubmit)=\"onSubmit()\">\n      <div formArrayName=\"chaptersforms\" *ngFor=\"let item of chapterfg.get('chaptersforms')['controls']; let i = index\">\n        <div [formGroupName]=\"i\">\n          <mat-form-field>\n                <input\n                  matInput\n                  type=\"text\"\n                  aria-label=\"chapterName\"\n                  placeholder=\"Name of chapter\"\n                  formControlName=\"chapterName\"\n                />\n          </mat-form-field>\n          <mat-form-field>\n                <textarea\n                  matInput\n                  type=\"text\"\n                  aria-label=\"text\"\n                  placeholder=\"Chapter\"\n                  formControlName=\"text\"\n                  rows=\"10\"\n                ></textarea>\n          </mat-form-field>\n        </div>\n      </div>\n      <button mat-raised-button type=\"submit\">\n        Add chapter\n      </button>\n    </form>\n  </mat-card-content>\n  </mat-card>\n  <mat-card class=\"error\" *ngIf=\"errorMessage\" data-cy=\"appError\">\n  got an error while adding the story: {{ errorMessage }}\n  </mat-card>\n  <mat-card\n  class=\"confirmation\"\n  *ngIf=\"confirmationMessage\"\n  data-cy=\"appConfirmation\"\n  >\n  {{ confirmationMessage }}\n<div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { StoryDataService } from '../story-data.service';\nimport { Story } from '../story.model';\nimport { FormBuilder, FormGroup, Validators, FormArray } from '@angular/forms';\nimport { Chapter } from '../chapter.model';\nimport { catchError, debounceTime, distinctUntilChanged, delay } from 'rxjs/operators';\nimport { EMPTY, Observable } from 'rxjs';\n\n\n@Component({\n  selector: 'app-story-detail',\n  templateUrl: './story-detail.component.html',\n  styleUrls: ['./story-detail.component.css']\n})\nexport class StoryDetailComponent implements OnInit {\n  public story: Story;\n  public chapterfg: FormGroup;\n  public errorMessage: string = '';\n  public confirmationMessage: string = '';\n  private _fetchChapters$: Observable<Chapter[]>;\n  private favorited$: Observable<boolean>;\n  private _isLoading: boolean;\n\n  constructor(\n    private route: ActivatedRoute,\n    private fb: FormBuilder,\n    private _storyDataService: StoryDataService\n  ) {\n    this._isLoading = true;\n  }\n\n  ngOnInit() {\n    this.route.data.subscribe(item => (this.story = item['story']));\n\n    this._fetchChapters$ = this._storyDataService.getChapters$(this.story.id).pipe(\n      catchError((err) => {\n        this.errorMessage = err;\n        return EMPTY;\n      })\n    );\n\n    this.favorited$ = this._storyDataService.isFavorited$(this.story.id).pipe(\n      catchError((err) => {\n        this.errorMessage = err;\n        return EMPTY;\n      })\n    );\n\n    this.chapterfg = this.fb.group({\n      chaptersforms: this.fb.array([ this.createChapters() ])\n    });\n\n    this.chaptersforms.valueChanges\n      .pipe(debounceTime(400), distinctUntilChanged())\n      .subscribe(ingList => {\n        const lastElement = ingList[ingList.length - 1];\n        if ( lastElement.chapterName && lastElement.text.length > 2 ) { \n          this.chaptersforms.push(this.createChapters()); \n         }else if (ingList.length >= 2) {\n          const secondToLast = ingList[ingList.length - 2];\n          if (\n            !lastElement.chapterName &&\n            !lastElement.text &&\n            (!secondToLast.chapterName || secondToLast.text.length < 2)\n          ) {\n            this.chaptersforms.removeAt(this.chaptersforms.length - 1);\n          }\n        }\n      });\n  }\n\n  createChapters(): FormGroup {\n    return this.fb.group({\n      chapterName: ['', [Validators.minLength(3)]],\n      text: ['']\n    });\n  }\n\n  get chaptersforms(): FormArray {\n    return <FormArray>this.chapterfg.get('chaptersforms');\n  }\n\n  get allChapters$(): Observable<Chapter[]> {\n    return this._fetchChapters$;\n  }\n\n  onSubmit() {\n    let chapters = this.chapterfg.value.chaptersforms.map(Chapter.fromJSONCreate);\n    chapters = chapters.filter((ing) => ing.name != \"\");\n    this.story.addChapters(chapters);\n\n    this._storyDataService\n      .updateStory(this.story)\n\n    this.chapterfg = this.fb.group({\n      chaptersforms: this.fb.array([ this.createChapters() ])\n    });\n  }\n\n  getErrorMessage(errors: any): string {\n    if (!errors) {\n      return null;\n    }\n    if (errors.required) {\n      return 'is required';\n    } else if (errors.minlength) {\n      return `needs at least ${errors.minlength.requiredLength} characters (got ${errors.minlength.actualLength})`;\n    } else if (errors.amountNoName) {\n      return `if amount is set you must set a name`;\n    }\n  }\n\n  ngAfterViewInit() { \n    this._isLoading = false; \n  }\n\n  get isLoading() {\n    return this._isLoading;\n  }\n\n  get isFavorited$() {\n    return this.favorited$;\n  }\n\n  async favoriteStory() {\n    this._storyDataService.favorite(this.story).pipe(\n      catchError((err) => {\n        this.errorMessage = err;\n        return EMPTY;\n      }) \n    ).subscribe(\n      story => this.favorited$ = this._storyDataService.isFavorited$(this.story.id).pipe(\n      catchError((err) => {\n        this.errorMessage = err;\n        return EMPTY;\n      })\n    ));\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Story } from './story.model';\n\n@Pipe({\n  name: 'storyFilter'\n})\nexport class StoryFilterPipe implements PipeTransform {\n  transform(stories: Story[], name: string): Story[] {\n    if (!name || name.length === 0) {\n      return stories;\n    }\n    return stories.filter(rec =>\n      rec.name.toLowerCase().startsWith(name.toLowerCase())\n    );\n  }\n}","import { Component, OnInit } from '@angular/core';\nimport { Story } from '../story.model';\nimport { StoryDataService } from '../story-data.service';\nimport { Subject, Observable, of, EMPTY, merge } from 'rxjs';\nimport {\n  distinctUntilChanged,\n  debounceTime,\n  map,\n  filter,\n  catchError,\n  scan,\n} from 'rxjs/operators';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-story-list',\n  templateUrl: './story-list.component.html',\n  styleUrls: ['./story-list.component.css'],\n})\n\nexport class StoryListComponent implements OnInit {\n  public filterStoryName: string;\n  public filterStory$ = new Subject<string>();\n  private _fetchStories$: Observable<Story[]>;\n\n  public errorMessage: string = '';\n\n  constructor(private _storyDataService: StoryDataService, private _router: Router) {\n    this.filterStory$\n      .pipe(\n        distinctUntilChanged(),\n        debounceTime(400),\n        map((val) => val.toLowerCase())\n      )\n      .subscribe((val) => (this.filterStoryName = val));\n  }\n\n  ngOnInit(): void {\n    this._fetchStories$ = this._storyDataService.allStories$.pipe(\n      catchError((err) => {\n        this.errorMessage = err;\n        return EMPTY;\n      })\n    );\n  }\n\n  applyFilter(filter: string) {\n    this.filterStoryName = filter;\n  }\n\n  get stories$(): Observable<Story[]> {\n    return this._fetchStories$;\n  }\n  \n  showStory(story: Story) {\n    this._router.navigateByUrl['/story/' + story.id];\n  }\n}\n","<div fxLayout=\"column\" fxLayoutGap=\"2%\">\n    <mat-card>\n      <mat-form-field>\n        <input\n          matInput\n          (keyup)=\"filterStory$.next($event.target.value)\"\n          placeholder=\"filter\"\n          type=\"text\"\n          data-cy=\"filterInput\"\n        />\n      </mat-form-field>\n    </mat-card>\n    <mat-card class=\"error\" *ngIf=\"errorMessage\" data-cy=\"appError\">\n      got an error while loading the story list: {{ errorMessage }}\n    </mat-card>\n    <div *ngIf=\"stories$ | async as stories; else loadingOrError\">\n      <div\n        fxLayout=\"row wrap\"\n        fxLayout.xs=\"column\"\n        fxLayoutGap=\"0.5%\"\n        fxLayoutAlign=\"start start\"\n      >\n        <div\n          class=\"story\"\n          *ngFor=\"let story of stories | storyFilter: filterStoryName\"\n          fxFlex=\"0 0 calc(25%-0.5%)\"\n          fxFlex.xs=\"100%\"\n        >\n          <app-story (click)=\"showStory(story)\" [story]=\"story\"></app-story> \n        </div>\n      </div>\n    </div>\n  \n    <ng-template #loadingOrError>\n      <span *ngIf=\"errorMessage; else loading\"></span>\n      <ng-template #loading>\n        <mat-spinner></mat-spinner>\n      </ng-template>\n    </ng-template>\n  </div>\n  ","import { Chapter, ChapterJson } from './chapter.model';\r\nimport { NumberValueAccessor } from '@angular/forms';\r\n\r\ninterface StoryJson {\r\n    id: number,\r\n    name: string,\r\n    favorites: number,\r\n    author: string,\r\n    dateAdded: Date,\r\n    chapters: ChapterJson[],\r\n}\r\n\r\nexport class Story {\r\n    private _id;\r\n\r\n    constructor(\r\n        private _name: string,\r\n        private _favorites = 1,\r\n        private _author = '',\r\n        private _dateAdded = new Date(),\r\n        private _chapters = new Array<Chapter>(),\r\n    ) {}\r\n\r\n    static fromJSON(json: StoryJson): Story {\r\n        const rec = new Story(\r\n            json.name, \r\n            json.favorites,\r\n            json.author,\r\n            new Date(json.dateAdded),\r\n            json.chapters.map(Chapter.fromJSON), \r\n        );\r\n        rec._id = json.id;\r\n        return rec;\r\n    }\r\n\r\n    toJSON(): StoryJson {\r\n        return <StoryJson> {\r\n            id: this.id,\r\n            name: this.name,\r\n            chapters: this.chapters.map(ing => ing.toJSON()),\r\n            favorites: this.favorites,\r\n            dateAdded: this.dateAdded,\r\n            author: this.author\r\n        };\r\n    }\r\n\r\n    get name(): string {\r\n        return this._name;\r\n    }\r\n\r\n    get chapters() : Chapter[] {\r\n        return this._chapters;\r\n    }\r\n\r\n    get dateAdded() {\r\n        return this._dateAdded;\r\n    }\r\n\r\n    get favorites() {\r\n        return this._favorites;\r\n    }\r\n\r\n    get author() {\r\n        return this._author;\r\n    }\r\n\r\n    get id() {\r\n        return this._id;\r\n    }\r\n\r\n    addChapters(chapterlist: Chapter[]) {\r\n        chapterlist.forEach(chapter => {\r\n            this._chapters.push(chapter);\r\n        });\r\n    }\r\n\r\n    addChapter(name: string, text: string, author?: string, number?: number) {\r\n        const currentDate = new Date();\r\n        this._chapters.push(new Chapter(name, number, currentDate, text, author));\r\n    }\r\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { StoryComponent } from './story/story.component';\nimport { ChapterComponent } from './chapter/chapter.component';\nimport { MaterialModule } from '../material/material.module';\nimport { StoryListComponent } from './story-list/story-list.component';\nimport { AddStoryComponent } from './add-story/add-story.component';\nimport { StoryFilterPipe } from './story-filter.pipe';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule, Routes } from '@angular/router';\nimport { MyStoryListComponent } from './my-story-list/my-story-list.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { StoryDetailComponent } from './story-detail/story-detail.component';\nimport { FavoriteStoryListComponent } from './favorite-story-list/favorite-story-list.component';\n\n\nconst routes: Routes = [\n  { path: 'list', component: StoryListComponent },\n  { path: 'add', component: AddStoryComponent }\n];\n@NgModule({\n  declarations: [\n    StoryComponent,\n    ChapterComponent,\n    StoryListComponent,\n    StoryFilterPipe,\n    AddStoryComponent,\n    MyStoryListComponent,\n    FavoriteStoryListComponent,\n    StoryDetailComponent\n    ],\n  imports: [\n    CommonModule, \n    MaterialModule, \n    ReactiveFormsModule,\n    RouterModule.forChild(routes),\n  ],\n  exports: [\n    StoryListComponent, \n    AddStoryComponent]\n})\nexport class StoryModule { }\n","import { Component, OnInit, Input } from '@angular/core';\nimport { ChapterComponent } from '../chapter/chapter.component';\nimport { Story } from '../story.model';\nimport { StoryDataService } from '../story-data.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-story',\n  templateUrl: './story.component.html',\n  styleUrls: ['./story.component.css']\n})\nexport class StoryComponent implements OnInit {\n  @Input() public story : Story;\n\n  constructor(private _storyDataService: StoryDataService, private _router: Router) {}\n\n  ngOnInit(): void {\n  }\n\n  showStory() {\n    this._router.navigate(['/story/' + this.story.id]);\n  }\n}\n","<mat-card data-cy=\"storyCard\" (click)=\"showStory()\">\n    <mat-card-header>\n      <mat-card-title\n        >{{ story.name }}\n      </mat-card-title>\n      <mat-card-title>\n        <mat-icon>favorite</mat-icon> {{ story.favorites }}\n      </mat-card-title>\n      <mat-card-subtitle\n        >added on {{ story.dateAdded | date:'dd-MM-yyyy' }}</mat-card-subtitle\n      >\n    </mat-card-header>\n    <mat-card-content>\n      <h3 mat-subheader>{{ story.chapters.length }} chapter(s)</h3>\n      <!---\n      <mat-list>\n        <mat-list-item *ngFor=\"let chapter of story.chapters\">\n          <app-chapter [chapter]=\"chapter\"></app-chapter>\n        </mat-list-item>\n      </mat-list>\n      -->\n    </mat-card-content>\n  </mat-card>\n  ","import { AuthenticationService } from './authentication.service';\nimport { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  Router,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private authService: AuthenticationService,\n    private router: Router\n  ) {}\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): boolean {\n    if (this.authService.user$.getValue()) {\n      return true;\n    }\n    this.authService.redirectUrl = state.url;\n    this.router.navigate(['/login']);\n    return false;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { map } from 'rxjs/operators';\n\nfunction parseJwt(token) {\n  if (!token) {\n    return null;\n  }\n  const base64Token = token.split('.')[1];\n  const base64 = base64Token.replace(/-/g, '+').replace(/_/g, '/');\n  return JSON.parse(window.atob(base64));\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthenticationService {\n  private readonly _tokenKey = 'currentUser';\n  private _user$: BehaviorSubject<string>;\n  public redirectUrl: string = null;\n\n  constructor(private http: HttpClient) {\n    let parsedToken = parseJwt(localStorage.getItem(this._tokenKey));\n    if (parsedToken) {\n      const expires =\n        new Date(parseInt(parsedToken.exp, 10) * 1000) < new Date();\n      if (expires) {\n        localStorage.removeItem(this._tokenKey);\n        parsedToken = null;\n      }\n    }\n    this._user$ = new BehaviorSubject<string>(\n      parsedToken && parsedToken.unique_name\n    );\n  }\n\n  get user$(): BehaviorSubject<string> {\n    return this._user$;\n  }\n\n  get token(): string {\n    const localToken = localStorage.getItem(this._tokenKey);\n    return !!localToken ? localToken : '';\n  }\n\n  login(email: string, password: string): Observable<boolean> {\n    return this.http\n      .post(\n        `${environment.apiUrl}/account`,\n        { email, password },\n        { responseType: 'text' }\n      )\n      .pipe(\n        map((token: any) => {\n          if (token) {\n            localStorage.setItem(this._tokenKey, token);\n            this._user$.next(email);\n            return true;\n          } else {\n            return false;\n          }\n        })\n      );\n  }\n\n  register(\n    nickname: string,\n    email: string,\n    password: string\n  ): Observable<boolean> {\n    return this.http\n      .post(\n        `${environment.apiUrl}/account/register`,\n        {\n          nickname,\n          email,\n          password,\n          passwordConfirmation: password,\n        },\n        { responseType: 'text' }\n      )\n      .pipe(\n        map((token: any) => {\n          if (token) {\n            localStorage.setItem(this._tokenKey, token);\n            this._user$.next(email);\n            return true;\n          } else {\n            return false;\n          }\n        })\n      );\n  }\n\n  logout() {\n    if (this.user$.getValue()) {\n      localStorage.removeItem('currentUser');\n      this._user$.next(null);\n    }\n  }\n\n  checkUserNameAvailability = (email: string): Observable<boolean> => {\n    return this.http.get<boolean>(\n      `${environment.apiUrl}/account/checkusername`,\n      {\n        params: { email },\n      }\n    );\n  };\n\n  checkNicknameAvailability = (nickname: string): Observable<boolean> => {\n    return this.http.get<boolean>(\n      `${environment.apiUrl}/account/checknickname`,\n      {\n        params: { nickname },\n      }\n    );\n  }\n}\n","import { AuthenticationService } from '../authentication.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {\n  AbstractControl,\n  FormBuilder,\n  FormGroup,\n  ValidatorFn,\n  Validators,\n} from '@angular/forms';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nfunction comparePasswords(control: AbstractControl): { [key: string]: any } {\n  const password = control.get('password');\n  const confirmPassword = control.get('confirmPassword');\n  return password.value === confirmPassword.value\n    ? null\n    : { passwordsDiffer: true };\n}\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent implements OnInit {\n  public user: FormGroup;\n  public errorMessage: string = '';\n\n  constructor(\n    private authService: AuthenticationService,\n    private router: Router,\n    private fb: FormBuilder\n  ) {}\n\n  ngOnInit() {\n    this.user = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required],\n    });\n  }\n\n  onSubmit() {\n    this.authService\n      .login(this.user.value.email, this.user.value.password)\n      .subscribe(\n        (val) => {\n          if (val) {\n            if (this.authService.redirectUrl) {\n              this.router.navigateByUrl(this.authService.redirectUrl);\n              this.authService.redirectUrl = undefined;\n            } else {\n              this.router.navigate(['/story/list']);\n            }\n          }\n        },\n        (err: HttpErrorResponse) => {\n          console.log(err);\n          if (err.error instanceof Error) {\n            this.errorMessage = `${err.error.message}`;\n          } else {\n            this.errorMessage = `Er werd geen account gevonden met opgegeven e-mailadres en wachtwoord`;\n          }\n        }\n      );\n  }\n\n  getErrorMessage(errors: any) {\n    //opvangen van de validators\n    if (!errors) {\n      return null;\n    }\n\n    else if (errors.required) {\n      return 'Dit moet moet ingevuld worden';\n    }\n\n    else if (errors.email){\n      return 'Geen geldige email'\n    }\n  }\n}\n","<div class=\"login-main\">\n  <mat-card data-cy=\"login\">\n    <form [formGroup]=\"user\" (ngSubmit)=\"onSubmit()\">\n      <mat-card-title>Login</mat-card-title>\n\n      <mat-card-content>\n        <div class=\"input\">\n          <div class=\"veld\">\n            <mat-form-field>\n              <input\n                matInput\n                type=\"email\"\n                placeholder=\"email\"\n                aria-label=\"email\"\n                data-cy=\"login-email\"\n                formControlName=\"email\"\n                required\n              />\n              <mat-error data-cy=\"email-error\" *ngIf=\"user.get('email').errors && user.get('email').touched\">\n                {{getErrorMessage(user.get('email')['errors'])}}\n              </mat-error>\n            </mat-form-field>\n          </div>\n        </div>\n        <div class=\"input\">\n          <mat-form-field>\n            <input\n              matInput\n              type=\"password\"\n              placeholder=\"password\"\n              aria-label=\"password\"\n              data-cy=\"login-password\"\n              formControlName=\"password\"\n              required\n            />\n            <mat-error data-cy=\"password-error\" *ngIf=\"user.get('password').errors && user.get('password').touched\">\n              {{getErrorMessage(user.get('password')['errors'])}}\n            </mat-error>\n          </mat-form-field>\n        </div>\n      </mat-card-content>\n      <mat-card-actions fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n        <button\n          mat-raised-button\n          type=\"submit\"\n          color=\"primary\"\n          data-cy=\"login-button\"\n          [disabled]=\"!user.valid\"\n        >\n          Login\n        </button>\n        <button \n          mat-raised-button \n          type=\"submit\"\n          color=\"secondary\"\n          [routerLink]=\"['/register']\"\n        >\n        Register\n      </button>\n      </mat-card-actions>\n    </form>\n    <mat-card class=\"error\" *ngIf=\"errorMessage\" data-cy=\"appError\">\n      {{ errorMessage }}\n    </mat-card>\n  </mat-card>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-regels',\n  templateUrl: './regels.component.html',\n  styleUrls: ['./regels.component.css']\n})\nexport class RegelsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<ul>\n  <li>At least 8 characters</li>\n  <li>At least 1 lower case letter</li>\n  <li>At leest 1 upper case letter</li>\n  <li>At least 1 number</li>\n</ul>","import { Component, OnInit } from '@angular/core';\nimport {\n  Validators,\n  FormGroup,\n  FormBuilder,\n  ValidatorFn,\n  AbstractControl,\n  ValidationErrors,\n} from '@angular/forms';\nimport { AuthenticationService } from '../authentication.service';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport { RegelsComponent } from '../regels/regels.component';\n\nfunction patternValidator(regex: RegExp, error: ValidationErrors): ValidatorFn {\n  return (control: AbstractControl): { [key: string]: any } => {\n    if (!control.value) {\n      return null;\n    }\n\n    // test the value of the control against the regexp supplied\n    const valid = regex.test(control.value);\n    // if true, return no error (no error), else return error passed in the second parameter\n    return valid ? null : error;\n  };\n}\n\nfunction comparePasswords(control: AbstractControl): { [key: string]: any } {\n  const password = control.get('password');\n  const confirmPassword = control.get('confirmPassword');\n  return password.value === confirmPassword.value\n    ? null\n    : { passwordsDiffer: true };\n}\n\nfunction serverSideValidateUsername(\n  checkAvailabilityFn: (n: string) => Observable<boolean>\n): ValidatorFn {\n  return (control: AbstractControl): Observable<{ [key: string]: any }> => {\n    return checkAvailabilityFn(control.value).pipe(\n      map((available) => {\n        if (available) {\n          return null;\n        }\n        return { userAlreadyExists: true };\n      })\n    );\n  };\n}\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css'],\n  \n})\nexport class RegisterComponent implements OnInit {\n  public user: FormGroup;\n  public errorMessage: string = '';\n\n  constructor(\n    private authService: AuthenticationService,\n    private router: Router,\n    private fb: FormBuilder,\n    private _snackBar: MatSnackBar\n  ) {}\n\n  openRegels() {\n    this._snackBar.openFromComponent(RegelsComponent, {\n      duration: 3000\n    });\n  }\n\n  ngOnInit() {\n    this.user = this.fb.group({\n      nickname: ['', Validators.required],\n      email: [\n        '',\n        [Validators.required, Validators.email],\n        serverSideValidateUsername(this.authService.checkUserNameAvailability),\n      ],\n      passwordGroup: this.fb.group(\n        {\n          password: [\n            '',\n            [\n              Validators.required,\n              Validators.minLength(8),\n              patternValidator(/\\d/, { hasNumber: true }),\n              patternValidator(/[A-Z]/, { hasUpperCase: true }),\n              patternValidator(/[a-z]/, { hasLowerCase: true }),\n            ],\n          ],\n          confirmPassword: ['', Validators.required],\n        },\n        { validator: comparePasswords }\n      ),\n    });\n  }\n\n  getErrorMessage(errors: any) {\n    if (!errors) {\n      return null;\n    }\n    if (errors.required) {\n      return 'is required';\n    } else if (errors.minlength) {\n      return `needs at least ${errors.minlength.requiredLength} characters (got ${errors.minlength.actualLength})`;\n    } else if (errors.hasNumber) {\n      return `needs at least 1 number`;\n    } else if (errors.hasUpperCase) {\n      return `needs at least 1 upper case letter`;\n    } else if (errors.hasNumber) {\n      return `needs at least 1 lower case letter`;\n    } else if (errors.userAlreadyExists) {\n      return `email already used`;\n    } else if (errors.email) {\n      return `not a valid email address`;\n    } else if (errors.passwordsDiffer) {\n      return `passwords are not the same`;\n    }\n  }\n\n  onSubmit() {\n    this.authService\n      .register(\n        this.user.value.nickname,\n        this.user.value.email,\n        this.user.value.passwordGroup.password\n      )\n      .subscribe(\n        (val) => {\n          if (val) {\n            if (this.authService.redirectUrl) {\n              this.router.navigateByUrl(this.authService.redirectUrl);\n              this.authService.redirectUrl = undefined;\n            } else {\n              this.router.navigate(['/story/list']);\n            }\n          } else {\n            this.errorMessage = `Could not login`;\n          }\n        },\n        (err: HttpErrorResponse) => {\n          console.log(err);\n          if (err.error instanceof Error) {\n            this.errorMessage = `Error while trying to login user ${this.user.value.email}: ${err.error.message}`;\n          } else {\n            this.errorMessage = `één of meerdere velden zijn onjuist ingevuld`;\n          }\n        }\n      );\n  }\n}\n","<div class=\"login-main\">\n    <mat-card data-cy=\"register\">\n      <form [formGroup]=\"user\" (ngSubmit)=\"onSubmit()\">\n        <mat-card-title>Register</mat-card-title>\n        <mat-card-content fxLayout=\"column\">\n          <span fxLayout=\"row\" fxLayoutGap=\"2%\">\n            <mat-form-field>\n              <input\n                matInput\n                placeholder=\"nickname\"\n                aria-label=\"nickname\"\n                data-cy=\"register-nickname\"\n                formControlName=\"nickname\"\n              />\n              <mat-error\n                *ngIf=\"\n                  user.get('nickname').errors && user.get('nickname').touched\n                \"\n              >\n                {{ getErrorMessage(user.get('nickname').errors) }}\n              </mat-error>\n            </mat-form-field>\n          </span>\n          <mat-form-field>\n            <input\n              matInput\n              placeholder=\"email\"\n              aria-label=\"email\"\n              data-cy=\"register-email\"\n              formControlName=\"email\"\n            />\n            <mat-error\n              *ngIf=\"user.get('email').errors && user.get('email').touched\"\n            >\n              {{ getErrorMessage(user.get('email').errors) }}\n            </mat-error>\n          </mat-form-field>\n          <span fxLayout=\"column\" formGroupName=\"passwordGroup\">\n            <div class=\"rij\">\n              <button type=\"button\" class=\"regels\" mat-stroked-button (click)=\"openRegels()\" aria-label=\"Show an example snack-bar\">\n                ?\n              </button>\n              <mat-form-field class=\"password\">\n                <input\n                  class=\"password\"\n                  type=\"password\"\n                  matInput\n                  placeholder=\"password\"\n                  aria-label=\"password\"\n                  data-cy=\"register-password\"\n                  formControlName=\"password\"\n                />\n                <mat-error\n                  *ngIf=\"\n                    user.get('passwordGroup').get('password').errors &&\n                    user.get('passwordGroup').get('password').touched\n                  \"\n                >\n                  {{\n                    getErrorMessage(\n                      user.get('passwordGroup').get('password').errors\n                    )\n                  }}\n                </mat-error>\n              </mat-form-field>\n            </div>\n            <mat-form-field>\n              <input\n                type=\"password\"\n                matInput\n                placeholder=\"confirm password\"\n                aria-label=\"confirm password\"\n                data-cy=\"register-confirm-password\"\n                formControlName=\"confirmPassword\"\n              />\n              <mat-error\n                *ngIf=\"\n                  user.get('passwordGroup').get('confirmPassword').errors &&\n                  user.get('passwordGroup').get('confirmPassword').touched\n                \"\n              >\n                {{\n                  getErrorMessage(\n                    user.get('passwordGroup').get('confirmPassword').errors\n                  )\n                }}\n              </mat-error>\n            </mat-form-field>\n            <mat-error\n              *ngIf=\"\n                user.get('passwordGroup').errors &&\n                user.get('passwordGroup').get('confirmPassword').touched &&\n                user.get('passwordGroup').get('password').touched\n              \"\n            >\n              {{ getErrorMessage(user.get('passwordGroup').errors) }}\n            </mat-error>\n          </span>\n        </mat-card-content>\n  \n        <mat-card-actions fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n          <button\n            mat-raised-button\n            type=\"submit\"\n            color=\"primary\"\n            data-cy=\"register-button\"\n            [disabled]=\"!user.valid\"\n          >\n            Register\n          </button>\n\n          <button \n            mat-raised-button\n            type=\"submit\"\n            color=\"secondary\"\n            data-cy=\"login-button\"\n            [routerLink]=\"['/login']\">Login</button>\n\n        </mat-card-actions>\n      </form>\n\n      <mat-card class=\"error\" *ngIf=\"errorMessage\" data-cy=\"appError\">\n        {{ errorMessage }}\n      </mat-card>\n    </mat-card>\n  </div>\n  ","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { MaterialModule } from '../material/material.module';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RegelsComponent } from './regels/regels.component';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\nconst routes: Routes = [\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent },\n];\n\n@NgModule({\n  declarations: [LoginComponent, RegisterComponent, RegelsComponent],\n  imports: [\n    CommonModule,\n    MaterialModule,\n    ReactiveFormsModule,\n    RouterModule.forChild(routes),\n  ],\n  providers: [ MatSnackBar ]\n})\nexport class UserModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: '/api'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}